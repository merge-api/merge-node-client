/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { MergeClient } from "../../../src/Client";

describe("CustomObjectClasses", () => {
    test("list", async () => {
        const server = mockServerPool.createServer();
        const client = new MergeClient({ apiKey: "test", accountToken: "test", environment: server.baseUrl });

        const rawResponseBody = {
            next: "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
            previous: "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
            results: [
                {
                    id: "ff1ff4cb-a66b-47dc-8e2a-50388049e602",
                    remote_id: "9579977",
                    created_at: "2021-09-15T00:00:00Z",
                    modified_at: "2021-10-16T00:00:00Z",
                    name: "order",
                    description: "Order object",
                    labels: { singular: "Order", plural: "Orders" },
                    fields: [
                        {
                            display_name: "Order ID",
                            remote_key_name: "order_id",
                            description: "The unique ID for the order.",
                            is_required: true,
                            field_type: "string",
                            field_format: "string",
                            field_choices: [{}],
                        },
                        {
                            display_name: "Order Quantity",
                            remote_key_name: "order_quantity",
                            description: "The number of items ordered.",
                            is_required: true,
                            field_type: "number",
                            field_format: "number",
                            field_choices: [{}],
                        },
                        {
                            display_name: "Customer Type",
                            remote_key_name: "customer_type",
                            description: "The type of customer.",
                            is_required: true,
                            field_type: "string",
                            field_format: "enumeration",
                            field_choices: [{}, {}],
                        },
                    ],
                    association_types: [{ key: "value" }],
                },
            ],
        };
        server
            .mockEndpoint()
            .get("/crm/v1/custom-object-classes")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.crm.customObjectClasses.list({
            cursor: "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
        });
        expect(response).toEqual({
            next: "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
            previous: "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
            results: [
                {
                    id: "ff1ff4cb-a66b-47dc-8e2a-50388049e602",
                    remoteId: "9579977",
                    createdAt: new Date("2021-09-15T00:00:00.000Z"),
                    modifiedAt: new Date("2021-10-16T00:00:00.000Z"),
                    name: "order",
                    description: "Order object",
                    labels: {
                        singular: "Order",
                        plural: "Orders",
                    },
                    fields: [
                        {
                            displayName: "Order ID",
                            remoteKeyName: "order_id",
                            description: "The unique ID for the order.",
                            isRequired: true,
                            fieldType: "string",
                            fieldFormat: "string",
                            fieldChoices: [{}],
                        },
                        {
                            displayName: "Order Quantity",
                            remoteKeyName: "order_quantity",
                            description: "The number of items ordered.",
                            isRequired: true,
                            fieldType: "number",
                            fieldFormat: "number",
                            fieldChoices: [{}],
                        },
                        {
                            displayName: "Customer Type",
                            remoteKeyName: "customer_type",
                            description: "The type of customer.",
                            isRequired: true,
                            fieldType: "string",
                            fieldFormat: "enumeration",
                            fieldChoices: [{}, {}],
                        },
                    ],
                    associationTypes: [
                        {
                            key: "value",
                        },
                    ],
                },
            ],
        });
    });

    test("retrieve", async () => {
        const server = mockServerPool.createServer();
        const client = new MergeClient({ apiKey: "test", accountToken: "test", environment: server.baseUrl });

        const rawResponseBody = {
            id: "ff1ff4cb-a66b-47dc-8e2a-50388049e602",
            remote_id: "9579977",
            created_at: "2021-09-15T00:00:00Z",
            modified_at: "2021-10-16T00:00:00Z",
            name: "order",
            description: "Order object",
            labels: { singular: "Order", plural: "Orders" },
            fields: [
                {
                    created_at: "2024-01-15T09:30:00Z",
                    modified_at: "2024-01-15T09:30:00Z",
                    display_name: "Order ID",
                    remote_key_name: "order_id",
                    description: "The unique ID for the order.",
                    is_required: true,
                    field_type: "string",
                    field_format: "string",
                    field_choices: [{}],
                },
                {
                    created_at: "2024-01-15T09:30:00Z",
                    modified_at: "2024-01-15T09:30:00Z",
                    display_name: "Order Quantity",
                    remote_key_name: "order_quantity",
                    description: "The number of items ordered.",
                    is_required: true,
                    field_type: "number",
                    field_format: "number",
                    field_choices: [{}],
                },
                {
                    created_at: "2024-01-15T09:30:00Z",
                    modified_at: "2024-01-15T09:30:00Z",
                    display_name: "Customer Type",
                    remote_key_name: "customer_type",
                    description: "The type of customer.",
                    is_required: true,
                    field_type: "string",
                    field_format: "enumeration",
                    field_choices: [{}, {}],
                },
            ],
            association_types: [{ key: "value" }],
        };
        server
            .mockEndpoint()
            .get("/crm/v1/custom-object-classes/id")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.crm.customObjectClasses.retrieve("id");
        expect(response).toEqual({
            id: "ff1ff4cb-a66b-47dc-8e2a-50388049e602",
            remoteId: "9579977",
            createdAt: new Date("2021-09-15T00:00:00.000Z"),
            modifiedAt: new Date("2021-10-16T00:00:00.000Z"),
            name: "order",
            description: "Order object",
            labels: {
                singular: "Order",
                plural: "Orders",
            },
            fields: [
                {
                    createdAt: new Date("2024-01-15T09:30:00.000Z"),
                    modifiedAt: new Date("2024-01-15T09:30:00.000Z"),
                    displayName: "Order ID",
                    remoteKeyName: "order_id",
                    description: "The unique ID for the order.",
                    isRequired: true,
                    fieldType: "string",
                    fieldFormat: "string",
                    fieldChoices: [{}],
                },
                {
                    createdAt: new Date("2024-01-15T09:30:00.000Z"),
                    modifiedAt: new Date("2024-01-15T09:30:00.000Z"),
                    displayName: "Order Quantity",
                    remoteKeyName: "order_quantity",
                    description: "The number of items ordered.",
                    isRequired: true,
                    fieldType: "number",
                    fieldFormat: "number",
                    fieldChoices: [{}],
                },
                {
                    createdAt: new Date("2024-01-15T09:30:00.000Z"),
                    modifiedAt: new Date("2024-01-15T09:30:00.000Z"),
                    displayName: "Customer Type",
                    remoteKeyName: "customer_type",
                    description: "The type of customer.",
                    isRequired: true,
                    fieldType: "string",
                    fieldFormat: "enumeration",
                    fieldChoices: [{}, {}],
                },
            ],
            associationTypes: [
                {
                    key: "value",
                },
            ],
        });
    });
});
