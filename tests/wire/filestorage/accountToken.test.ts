/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { MergeClient } from "../../../src/Client";

describe("AccountToken", () => {
    test("retrieve", async () => {
        const server = mockServerPool.createServer();
        const client = new MergeClient({ apiKey: "test", accountToken: "test", environment: server.baseUrl });

        const rawResponseBody = {
            account_token: "T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB",
            integration: {
                name: "name",
                abbreviated_name: "abbreviated_name",
                categories: ["hris"],
                image: "image",
                square_image: "square_image",
                color: "color",
                slug: "slug",
                api_endpoints_to_documentation_urls: { key: "value" },
                webhook_setup_guide_url: "webhook_setup_guide_url",
                category_beta_status: { key: "value" },
            },
            id: "0496d4c2-42e6-4072-80b3-7b69bfdc76fd",
        };
        server
            .mockEndpoint()
            .get("/filestorage/v1/account-token/public_token")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.filestorage.accountToken.retrieve("public_token");
        expect(response).toEqual({
            accountToken: "T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB",
            integration: {
                name: "name",
                abbreviatedName: "abbreviated_name",
                categories: ["hris"],
                image: "image",
                squareImage: "square_image",
                color: "color",
                slug: "slug",
                apiEndpointsToDocumentationUrls: {
                    key: "value",
                },
                webhookSetupGuideUrl: "webhook_setup_guide_url",
                categoryBetaStatus: {
                    key: "value",
                },
            },
            id: "0496d4c2-42e6-4072-80b3-7b69bfdc76fd",
        });
    });
});
