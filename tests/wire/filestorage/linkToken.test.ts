/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool.js";
import { MergeClient } from "../../../src/Client";

describe("LinkToken", () => {
    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new MergeClient({ apiKey: "test", accountToken: "test", environment: server.baseUrl });
        const rawRequestBody = {
            end_user_email_address: "example@gmail.com",
            end_user_organization_name: "Test Organization",
            end_user_origin_id: "12345",
            categories: ["hris", "ats"],
        };
        const rawResponseBody = {
            link_token: "necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0",
            integration_name: "Lever",
            magic_link_url: "https://link.merge.dev/asdfjkl12345jsndfgi2i83n",
        };
        server
            .mockEndpoint()
            .post("/filestorage/v1/link-token")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.filestorage.linkToken.create({
            endUserEmailAddress: "example@gmail.com",
            endUserOrganizationName: "Test Organization",
            endUserOriginId: "12345",
            categories: ["hris", "ats"],
        });
        expect(response).toEqual({
            linkToken: "necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0",
            integrationName: "Lever",
            magicLinkUrl: "https://link.merge.dev/asdfjkl12345jsndfgi2i83n",
        });
    });
});
