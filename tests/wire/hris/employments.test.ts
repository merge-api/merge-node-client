/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool.js";
import { MergeClient } from "../../../src/Client";

describe("Employments", () => {
    test("list", async () => {
        const server = mockServerPool.createServer();
        const client = new MergeClient({ apiKey: "test", accountToken: "test", environment: server.baseUrl });

        const rawResponseBody = {
            next: "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
            previous: "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
            results: [
                {
                    id: "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
                    remote_id: "19202938",
                    created_at: "2021-09-15T00:00:00Z",
                    modified_at: "2021-10-16T00:00:00Z",
                    employee: "employee",
                    job_title: "Executive Assistant to Tom Wambsgans",
                    pay_rate: 1.1,
                    pay_period: "HOUR",
                    pay_frequency: "WEEKLY",
                    pay_currency: "XUA",
                    pay_group: "pay_group",
                    flsa_status: "EXEMPT",
                    effective_date: "2023-10-06T18:42:34Z",
                    employment_type: "FULL_TIME",
                    remote_was_deleted: true,
                    field_mappings: {
                        organization_defined_targets: { custom_key: "custom_value" },
                        linked_account_defined_targets: { custom_key: "custom_value" },
                    },
                    remote_data: [{ path: "/jobs", data: ["Varies by platform"] }],
                },
            ],
        };
        server
            .mockEndpoint()
            .get("/hris/v1/employments")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.hris.employments.list();
        expect(response).toEqual({
            next: "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
            previous: "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
            results: [
                {
                    id: "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
                    remoteId: "19202938",
                    createdAt: new Date("2021-09-15T00:00:00.000Z"),
                    modifiedAt: new Date("2021-10-16T00:00:00.000Z"),
                    employee: "employee",
                    jobTitle: "Executive Assistant to Tom Wambsgans",
                    payRate: 1.1,
                    payPeriod: "HOUR",
                    payFrequency: "WEEKLY",
                    payCurrency: "XUA",
                    payGroup: "pay_group",
                    flsaStatus: "EXEMPT",
                    effectiveDate: new Date("2023-10-06T18:42:34.000Z"),
                    employmentType: "FULL_TIME",
                    remoteWasDeleted: true,
                    fieldMappings: {
                        organization_defined_targets: {
                            custom_key: "custom_value",
                        },
                        linked_account_defined_targets: {
                            custom_key: "custom_value",
                        },
                    },
                    remoteData: [
                        {
                            path: "/jobs",
                            data: ["Varies by platform"],
                        },
                    ],
                },
            ],
        });
    });

    test("retrieve", async () => {
        const server = mockServerPool.createServer();
        const client = new MergeClient({ apiKey: "test", accountToken: "test", environment: server.baseUrl });

        const rawResponseBody = {
            id: "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
            remote_id: "19202938",
            created_at: "2021-09-15T00:00:00Z",
            modified_at: "2021-10-16T00:00:00Z",
            employee: "employee",
            job_title: "Executive Assistant to Tom Wambsgans",
            pay_rate: 1.1,
            pay_period: "HOUR",
            pay_frequency: "WEEKLY",
            pay_currency: "XUA",
            pay_group: "pay_group",
            flsa_status: "EXEMPT",
            effective_date: "2023-10-06T18:42:34Z",
            employment_type: "FULL_TIME",
            remote_was_deleted: true,
            field_mappings: {
                organization_defined_targets: { custom_key: "custom_value" },
                linked_account_defined_targets: { custom_key: "custom_value" },
            },
            remote_data: [{ path: "/jobs", data: ["Varies by platform"] }],
        };
        server
            .mockEndpoint()
            .get("/hris/v1/employments/id")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.hris.employments.retrieve("id");
        expect(response).toEqual({
            id: "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
            remoteId: "19202938",
            createdAt: new Date("2021-09-15T00:00:00.000Z"),
            modifiedAt: new Date("2021-10-16T00:00:00.000Z"),
            employee: "employee",
            jobTitle: "Executive Assistant to Tom Wambsgans",
            payRate: 1.1,
            payPeriod: "HOUR",
            payFrequency: "WEEKLY",
            payCurrency: "XUA",
            payGroup: "pay_group",
            flsaStatus: "EXEMPT",
            effectiveDate: new Date("2023-10-06T18:42:34.000Z"),
            employmentType: "FULL_TIME",
            remoteWasDeleted: true,
            fieldMappings: {
                organization_defined_targets: {
                    custom_key: "custom_value",
                },
                linked_account_defined_targets: {
                    custom_key: "custom_value",
                },
            },
            remoteData: [
                {
                    path: "/jobs",
                    data: ["Varies by platform"],
                },
            ],
        });
    });
});
