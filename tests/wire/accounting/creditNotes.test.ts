/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { MergeClient } from "../../../src/Client";

describe("CreditNotes", () => {
    test("list", async () => {
        const server = mockServerPool.createServer();
        const client = new MergeClient({ apiKey: "test", accountToken: "test", environment: server.baseUrl });

        const rawResponseBody = {
            next: "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
            previous: "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
            results: [
                {
                    id: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                    remote_id: "123877",
                    created_at: "2021-09-15T00:00:00Z",
                    modified_at: "2021-10-16T00:00:00Z",
                    transaction_date: "2020-03-31T00:00:00Z",
                    status: "SUBMITTED",
                    number: "CN-29",
                    contact: "contact",
                    company: "company",
                    exchange_rate: "2.9",
                    total_amount: 50,
                    remaining_credit: 20,
                    inclusive_of_tax: true,
                    line_items: [
                        {
                            id: "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4",
                            remote_id: "121222",
                            created_at: "2021-09-15T00:00:00Z",
                            modified_at: "2021-10-16T00:00:00Z",
                            item: "0e3fd929-436c-4fd4-a48b-0c61f68d6178",
                            name: "Basic Monthly",
                            description: "prorated amount for items",
                            quantity: "quantity",
                            memo: "privNote",
                            unit_price: "5.0",
                            tax_rate: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                            total_line_amount: "5.0",
                            tracking_categories: [
                                "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                                "9b840d2-686a-465a-8a8e-7b028498f8e4",
                                "a47e11b6-c73b-4a0c-be31-130fc48177fa",
                            ],
                            account: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                            company: "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                            contact: "908934-49j9-093f-0989-908923908",
                            project: "22e65a5d-2df5-4e6e-884a-e538d0339000",
                            remote_was_deleted: true,
                        },
                    ],
                    tracking_categories: [
                        "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                        "9b840d2-686a-465a-8a8e-7b028498f8e4",
                        "a47e11b6-c73b-4a0c-be31-130fc48177fa",
                    ],
                    currency: "XUA",
                    remote_created_at: "2020-03-31T00:00:00Z",
                    remote_updated_at: "2020-03-31T00:00:00Z",
                    payments: ["b26fd49a-cbae-470a-a8f8-bcbc119e0390"],
                    applied_payments: ["a9a94a75-19c1-41fe-90d8-d9ba959c38e5"],
                    accounting_period: "accounting_period",
                    applied_to_lines: [
                        {
                            created_at: "2021-09-15T00:00:00Z",
                            modified_at: "2021-10-16T00:00:00Z",
                            invoice: "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
                            applied_date: "2020-03-31T00:00:00Z",
                            applied_amount: "2.9",
                        },
                    ],
                    remote_was_deleted: true,
                    field_mappings: {
                        organization_defined_targets: { custom_key: "custom_value" },
                        linked_account_defined_targets: { custom_key: "custom_value" },
                    },
                    remote_data: [{ path: "/actions", data: ["Varies by platform"] }],
                },
            ],
        };
        server
            .mockEndpoint()
            .get("/accounting/v1/credit-notes")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.accounting.creditNotes.list({
            cursor: "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
        });
        expect(response).toEqual({
            next: "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
            previous: "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
            results: [
                {
                    id: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                    remoteId: "123877",
                    createdAt: new Date("2021-09-15T00:00:00.000Z"),
                    modifiedAt: new Date("2021-10-16T00:00:00.000Z"),
                    transactionDate: new Date("2020-03-31T00:00:00.000Z"),
                    status: "SUBMITTED",
                    number: "CN-29",
                    contact: "contact",
                    company: "company",
                    exchangeRate: "2.9",
                    totalAmount: 50,
                    remainingCredit: 20,
                    inclusiveOfTax: true,
                    lineItems: [
                        {
                            id: "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4",
                            remoteId: "121222",
                            createdAt: new Date("2021-09-15T00:00:00.000Z"),
                            modifiedAt: new Date("2021-10-16T00:00:00.000Z"),
                            item: "0e3fd929-436c-4fd4-a48b-0c61f68d6178",
                            name: "Basic Monthly",
                            description: "prorated amount for items",
                            quantity: "quantity",
                            memo: "privNote",
                            unitPrice: "5.0",
                            taxRate: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                            totalLineAmount: "5.0",
                            trackingCategories: [
                                "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                                "9b840d2-686a-465a-8a8e-7b028498f8e4",
                                "a47e11b6-c73b-4a0c-be31-130fc48177fa",
                            ],
                            account: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                            company: "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                            contact: "908934-49j9-093f-0989-908923908",
                            project: "22e65a5d-2df5-4e6e-884a-e538d0339000",
                            remoteWasDeleted: true,
                        },
                    ],
                    trackingCategories: [
                        "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                        "9b840d2-686a-465a-8a8e-7b028498f8e4",
                        "a47e11b6-c73b-4a0c-be31-130fc48177fa",
                    ],
                    currency: "XUA",
                    remoteCreatedAt: new Date("2020-03-31T00:00:00.000Z"),
                    remoteUpdatedAt: new Date("2020-03-31T00:00:00.000Z"),
                    payments: ["b26fd49a-cbae-470a-a8f8-bcbc119e0390"],
                    appliedPayments: ["a9a94a75-19c1-41fe-90d8-d9ba959c38e5"],
                    accountingPeriod: "accounting_period",
                    appliedToLines: [
                        {
                            createdAt: new Date("2021-09-15T00:00:00.000Z"),
                            modifiedAt: new Date("2021-10-16T00:00:00.000Z"),
                            invoice: "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
                            appliedDate: new Date("2020-03-31T00:00:00.000Z"),
                            appliedAmount: "2.9",
                        },
                    ],
                    remoteWasDeleted: true,
                    fieldMappings: {
                        organization_defined_targets: {
                            custom_key: "custom_value",
                        },
                        linked_account_defined_targets: {
                            custom_key: "custom_value",
                        },
                    },
                    remoteData: [
                        {
                            path: "/actions",
                            data: ["Varies by platform"],
                        },
                    ],
                },
            ],
        });
    });

    test("create", async () => {
        const server = mockServerPool.createServer();
        const client = new MergeClient({ apiKey: "test", accountToken: "test", environment: server.baseUrl });
        const rawRequestBody = { model: {} };
        const rawResponseBody = {
            model: {
                id: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                remote_id: "123877",
                created_at: "2021-09-15T00:00:00Z",
                modified_at: "2021-10-16T00:00:00Z",
                transaction_date: "2020-03-31T00:00:00Z",
                status: "SUBMITTED",
                number: "CN-29",
                contact: "contact",
                company: "company",
                exchange_rate: "2.9",
                total_amount: 50,
                remaining_credit: 20,
                inclusive_of_tax: true,
                line_items: [
                    {
                        id: "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4",
                        remote_id: "121222",
                        created_at: "2021-09-15T00:00:00Z",
                        modified_at: "2021-10-16T00:00:00Z",
                        item: "0e3fd929-436c-4fd4-a48b-0c61f68d6178",
                        name: "Basic Monthly",
                        description: "prorated amount for items",
                        quantity: "quantity",
                        memo: "privNote",
                        unit_price: "5.0",
                        tax_rate: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                        total_line_amount: "5.0",
                        tracking_categories: [
                            "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa",
                        ],
                        account: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                        company: "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        contact: "908934-49j9-093f-0989-908923908",
                        project: "22e65a5d-2df5-4e6e-884a-e538d0339000",
                        remote_was_deleted: true,
                    },
                ],
                tracking_categories: [
                    "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                    "9b840d2-686a-465a-8a8e-7b028498f8e4",
                    "a47e11b6-c73b-4a0c-be31-130fc48177fa",
                ],
                currency: "XUA",
                remote_created_at: "2020-03-31T00:00:00Z",
                remote_updated_at: "2020-03-31T00:00:00Z",
                payments: ["b26fd49a-cbae-470a-a8f8-bcbc119e0390"],
                applied_payments: ["a9a94a75-19c1-41fe-90d8-d9ba959c38e5"],
                accounting_period: "accounting_period",
                applied_to_lines: [
                    {
                        created_at: "2021-09-15T00:00:00Z",
                        modified_at: "2021-10-16T00:00:00Z",
                        invoice: "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
                        applied_date: "2020-03-31T00:00:00Z",
                        applied_amount: "2.9",
                    },
                ],
                remote_was_deleted: true,
                field_mappings: {
                    organization_defined_targets: { custom_key: "custom_value" },
                    linked_account_defined_targets: { custom_key: "custom_value" },
                },
                remote_data: [{ path: "/actions", data: ["Varies by platform"] }],
            },
            warnings: [
                {
                    source: { pointer: "pointer" },
                    title: "Unrecognized Field",
                    detail: "An unrecognized field, age, was passed in with request data.",
                    problem_type: "UNRECOGNIZED_FIELD",
                },
            ],
            errors: [
                {
                    source: { pointer: "pointer" },
                    title: "Missing Required Field",
                    detail: "custom_fields is a required field on model.",
                    problem_type: "MISSING_REQUIRED_FIELD",
                },
            ],
            logs: [
                {
                    log_id: "99433219-8017-4acd-bb3c-ceb23d663832",
                    dashboard_view: "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                    log_summary: {
                        url: "www.exampleintegration.com/api/v1/exampleapi",
                        method: "POST",
                        status_code: 200,
                    },
                },
            ],
        };
        server
            .mockEndpoint()
            .post("/accounting/v1/credit-notes")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.accounting.creditNotes.create({
            model: {},
        });
        expect(response).toEqual({
            model: {
                id: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                remoteId: "123877",
                createdAt: new Date("2021-09-15T00:00:00.000Z"),
                modifiedAt: new Date("2021-10-16T00:00:00.000Z"),
                transactionDate: new Date("2020-03-31T00:00:00.000Z"),
                status: "SUBMITTED",
                number: "CN-29",
                contact: "contact",
                company: "company",
                exchangeRate: "2.9",
                totalAmount: 50,
                remainingCredit: 20,
                inclusiveOfTax: true,
                lineItems: [
                    {
                        id: "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4",
                        remoteId: "121222",
                        createdAt: new Date("2021-09-15T00:00:00.000Z"),
                        modifiedAt: new Date("2021-10-16T00:00:00.000Z"),
                        item: "0e3fd929-436c-4fd4-a48b-0c61f68d6178",
                        name: "Basic Monthly",
                        description: "prorated amount for items",
                        quantity: "quantity",
                        memo: "privNote",
                        unitPrice: "5.0",
                        taxRate: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                        totalLineAmount: "5.0",
                        trackingCategories: [
                            "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                            "9b840d2-686a-465a-8a8e-7b028498f8e4",
                            "a47e11b6-c73b-4a0c-be31-130fc48177fa",
                        ],
                        account: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                        company: "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                        contact: "908934-49j9-093f-0989-908923908",
                        project: "22e65a5d-2df5-4e6e-884a-e538d0339000",
                        remoteWasDeleted: true,
                    },
                ],
                trackingCategories: [
                    "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                    "9b840d2-686a-465a-8a8e-7b028498f8e4",
                    "a47e11b6-c73b-4a0c-be31-130fc48177fa",
                ],
                currency: "XUA",
                remoteCreatedAt: new Date("2020-03-31T00:00:00.000Z"),
                remoteUpdatedAt: new Date("2020-03-31T00:00:00.000Z"),
                payments: ["b26fd49a-cbae-470a-a8f8-bcbc119e0390"],
                appliedPayments: ["a9a94a75-19c1-41fe-90d8-d9ba959c38e5"],
                accountingPeriod: "accounting_period",
                appliedToLines: [
                    {
                        createdAt: new Date("2021-09-15T00:00:00.000Z"),
                        modifiedAt: new Date("2021-10-16T00:00:00.000Z"),
                        invoice: "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
                        appliedDate: new Date("2020-03-31T00:00:00.000Z"),
                        appliedAmount: "2.9",
                    },
                ],
                remoteWasDeleted: true,
                fieldMappings: {
                    organization_defined_targets: {
                        custom_key: "custom_value",
                    },
                    linked_account_defined_targets: {
                        custom_key: "custom_value",
                    },
                },
                remoteData: [
                    {
                        path: "/actions",
                        data: ["Varies by platform"],
                    },
                ],
            },
            warnings: [
                {
                    source: {
                        pointer: "pointer",
                    },
                    title: "Unrecognized Field",
                    detail: "An unrecognized field, age, was passed in with request data.",
                    problemType: "UNRECOGNIZED_FIELD",
                },
            ],
            errors: [
                {
                    source: {
                        pointer: "pointer",
                    },
                    title: "Missing Required Field",
                    detail: "custom_fields is a required field on model.",
                    problemType: "MISSING_REQUIRED_FIELD",
                },
            ],
            logs: [
                {
                    logId: "99433219-8017-4acd-bb3c-ceb23d663832",
                    dashboardView: "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                    logSummary: {
                        url: "www.exampleintegration.com/api/v1/exampleapi",
                        method: "POST",
                        statusCode: 200,
                    },
                },
            ],
        });
    });

    test("retrieve", async () => {
        const server = mockServerPool.createServer();
        const client = new MergeClient({ apiKey: "test", accountToken: "test", environment: server.baseUrl });

        const rawResponseBody = {
            id: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
            remote_id: "123877",
            created_at: "2021-09-15T00:00:00Z",
            modified_at: "2021-10-16T00:00:00Z",
            transaction_date: "2020-03-31T00:00:00Z",
            status: "SUBMITTED",
            number: "CN-29",
            contact: "contact",
            company: "company",
            exchange_rate: "2.9",
            total_amount: 50,
            remaining_credit: 20,
            inclusive_of_tax: true,
            line_items: [
                {
                    id: "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4",
                    remote_id: "121222",
                    created_at: "2021-09-15T00:00:00Z",
                    modified_at: "2021-10-16T00:00:00Z",
                    item: "0e3fd929-436c-4fd4-a48b-0c61f68d6178",
                    name: "Basic Monthly",
                    description: "prorated amount for items",
                    quantity: "quantity",
                    memo: "privNote",
                    unit_price: "5.0",
                    tax_rate: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                    total_line_amount: "5.0",
                    tracking_categories: [
                        "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                        "9b840d2-686a-465a-8a8e-7b028498f8e4",
                        "a47e11b6-c73b-4a0c-be31-130fc48177fa",
                    ],
                    account: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                    company: "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                    contact: "908934-49j9-093f-0989-908923908",
                    project: "22e65a5d-2df5-4e6e-884a-e538d0339000",
                    remote_was_deleted: true,
                },
            ],
            tracking_categories: [
                "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                "9b840d2-686a-465a-8a8e-7b028498f8e4",
                "a47e11b6-c73b-4a0c-be31-130fc48177fa",
            ],
            currency: "XUA",
            remote_created_at: "2020-03-31T00:00:00Z",
            remote_updated_at: "2020-03-31T00:00:00Z",
            payments: ["b26fd49a-cbae-470a-a8f8-bcbc119e0390"],
            applied_payments: ["a9a94a75-19c1-41fe-90d8-d9ba959c38e5"],
            accounting_period: "accounting_period",
            applied_to_lines: [
                {
                    remote_id: "088899",
                    created_at: "2021-09-15T00:00:00Z",
                    modified_at: "2021-10-16T00:00:00Z",
                    invoice: "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
                    applied_date: "2020-03-31T00:00:00Z",
                    applied_amount: "2.9",
                    remote_was_deleted: true,
                },
            ],
            remote_was_deleted: true,
            field_mappings: {
                organization_defined_targets: { custom_key: "custom_value" },
                linked_account_defined_targets: { custom_key: "custom_value" },
            },
            remote_data: [{ path: "/actions", data: ["Varies by platform"] }],
        };
        server
            .mockEndpoint()
            .get("/accounting/v1/credit-notes/id")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.accounting.creditNotes.retrieve("id");
        expect(response).toEqual({
            id: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
            remoteId: "123877",
            createdAt: new Date("2021-09-15T00:00:00.000Z"),
            modifiedAt: new Date("2021-10-16T00:00:00.000Z"),
            transactionDate: new Date("2020-03-31T00:00:00.000Z"),
            status: "SUBMITTED",
            number: "CN-29",
            contact: "contact",
            company: "company",
            exchangeRate: "2.9",
            totalAmount: 50,
            remainingCredit: 20,
            inclusiveOfTax: true,
            lineItems: [
                {
                    id: "ecbe05ac-62a3-46c5-ab31-4b478b37d1b4",
                    remoteId: "121222",
                    createdAt: new Date("2021-09-15T00:00:00.000Z"),
                    modifiedAt: new Date("2021-10-16T00:00:00.000Z"),
                    item: "0e3fd929-436c-4fd4-a48b-0c61f68d6178",
                    name: "Basic Monthly",
                    description: "prorated amount for items",
                    quantity: "quantity",
                    memo: "privNote",
                    unitPrice: "5.0",
                    taxRate: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                    totalLineAmount: "5.0",
                    trackingCategories: [
                        "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                        "9b840d2-686a-465a-8a8e-7b028498f8e4",
                        "a47e11b6-c73b-4a0c-be31-130fc48177fa",
                    ],
                    account: "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                    company: "595c8f97-2ac4-45b7-b000-41bdf43240b5",
                    contact: "908934-49j9-093f-0989-908923908",
                    project: "22e65a5d-2df5-4e6e-884a-e538d0339000",
                    remoteWasDeleted: true,
                },
            ],
            trackingCategories: [
                "b38c59b0-a9d7-4740-b1ee-5436c6751e3d",
                "9b840d2-686a-465a-8a8e-7b028498f8e4",
                "a47e11b6-c73b-4a0c-be31-130fc48177fa",
            ],
            currency: "XUA",
            remoteCreatedAt: new Date("2020-03-31T00:00:00.000Z"),
            remoteUpdatedAt: new Date("2020-03-31T00:00:00.000Z"),
            payments: ["b26fd49a-cbae-470a-a8f8-bcbc119e0390"],
            appliedPayments: ["a9a94a75-19c1-41fe-90d8-d9ba959c38e5"],
            accountingPeriod: "accounting_period",
            appliedToLines: [
                {
                    remoteId: "088899",
                    createdAt: new Date("2021-09-15T00:00:00.000Z"),
                    modifiedAt: new Date("2021-10-16T00:00:00.000Z"),
                    invoice: "5b3c1341-a20f-4e51-b72c-f3830a16c97b",
                    appliedDate: new Date("2020-03-31T00:00:00.000Z"),
                    appliedAmount: "2.9",
                    remoteWasDeleted: true,
                },
            ],
            remoteWasDeleted: true,
            fieldMappings: {
                organization_defined_targets: {
                    custom_key: "custom_value",
                },
                linked_account_defined_targets: {
                    custom_key: "custom_value",
                },
            },
            remoteData: [
                {
                    path: "/actions",
                    data: ["Varies by platform"],
                },
            ],
        });
    });

    test("metaPostRetrieve", async () => {
        const server = mockServerPool.createServer();
        const client = new MergeClient({ apiKey: "test", accountToken: "test", environment: server.baseUrl });

        const rawResponseBody = {
            request_schema: {
                type: "object",
                properties: {
                    model: {
                        type: "object",
                        required: [
                            "last_name",
                            "first_name",
                            "merge_categories",
                            "new_york_city_neighborhood",
                            "favorite_tv_shows",
                            "favorite_watch",
                        ],
                        properties: {
                            email_addresses: {
                                type: "array",
                                items: {
                                    type: "object",
                                    properties: {
                                        value: { type: "string", title: "value" },
                                        email_address_type: { type: "string", title: "email_address_type" },
                                        integration_params: {
                                            type: "object",
                                            title: "integration_params",
                                            properties: {},
                                        },
                                        linked_account_params: {
                                            type: "object",
                                            title: "linked_account_params",
                                            properties: {},
                                        },
                                    },
                                },
                                title: "email_addresses",
                                description: "Array of email_addresses objects",
                            },
                            urls: {
                                type: "array",
                                items: {
                                    type: "object",
                                    properties: {
                                        value: { type: "string", title: "value" },
                                        url_type: { type: "string", title: "url_type" },
                                        integration_params: {
                                            type: "object",
                                            title: "integration_params",
                                            properties: {},
                                        },
                                        linked_account_params: {
                                            type: "object",
                                            title: "linked_account_params",
                                            properties: {},
                                        },
                                    },
                                },
                                title: "urls",
                                description: "Array of urls objects",
                            },
                            first_name: { type: "string", title: "first_name", description: "The first name." },
                            last_name: { type: "string", title: "last_name", description: "The last name." },
                            phone_numbers: {
                                type: "array",
                                items: {
                                    type: "object",
                                    properties: {
                                        value: { type: "string", title: "value" },
                                        phone_number_type: { type: "string", title: "phone_number_type" },
                                        integration_params: {
                                            type: "object",
                                            title: "integration_params",
                                            properties: {},
                                        },
                                        linked_account_params: {
                                            type: "object",
                                            title: "linked_account_params",
                                            properties: {},
                                        },
                                    },
                                },
                                title: "phone_numbers",
                                description: "Array of phone_numbers objects",
                            },
                            tags: {
                                type: "array",
                                items: { type: "string", format: "uuid" },
                                title: "tags",
                                description: "Array of tags names",
                            },
                            attachments: {
                                type: "array",
                                items: {
                                    type: "object",
                                    properties: {
                                        id: { type: "string", title: "id" },
                                        file_url: { type: "string", title: "file_url" },
                                        file_name: { type: "string", title: "file_name" },
                                        attachment_type: { type: "string", title: "attachment_type" },
                                        integration_params: {
                                            type: "object",
                                            title: "integration_params",
                                            properties: {},
                                        },
                                        linked_account_params: {
                                            type: "object",
                                            title: "linked_account_params",
                                            properties: {},
                                        },
                                    },
                                },
                                title: "attachments",
                                description: "Array of attachments objects ",
                            },
                            merge_categories: {
                                type: "array",
                                categories: {
                                    type: "string",
                                    enum: [
                                        "HRIS",
                                        "ATS",
                                        "Accounting",
                                        "Ticketing",
                                        "File Storage",
                                        "CRM",
                                        "Marketing Automation",
                                    ],
                                    enum_information: [
                                        { value: "HRIS", description: "Merge HRIS Category" },
                                        { value: "ATS", description: "Merge ATS Category" },
                                        { value: "Accounting", description: "Merge Accounting Category" },
                                        { value: "Ticketing", description: "Merge Ticketing Category" },
                                        { value: "File Storage", description: "Merge File Storage Category" },
                                        { value: "CRM", description: "Merge CRM Category" },
                                        {
                                            value: "Marketing Automation",
                                            description: "Merge Marketing Automation Category",
                                        },
                                    ],
                                },
                                title: "Merge Categories",
                                description: "Array of Merge's Unified API Categories",
                            },
                            new_york_city_neighborhood: {
                                type: "string",
                                title: "Borough",
                                description: "One of the 5 Boroughs of New York City",
                            },
                            favorite_tv_shows: {
                                type: "array",
                                items: { type: "string", format: "uuid" },
                                title: "Favorite TV Shows",
                                description: "Array of TV Show objects on merge.tv_shows",
                            },
                            favorite_watch: {
                                type: "string",
                                title: "Favorite Watch",
                                description: "Favorite watch of all time",
                            },
                        },
                    },
                },
            },
            remote_field_classes: { key: "value" },
            status: { linked_account_status: "linked_account_status", can_make_request: true },
            has_conditional_params: true,
            has_required_linked_account_params: true,
        };
        server
            .mockEndpoint()
            .get("/accounting/v1/credit-notes/meta/post")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.accounting.creditNotes.metaPostRetrieve();
        expect(response).toEqual({
            requestSchema: {
                type: "object",
                properties: {
                    model: {
                        type: "object",
                        required: [
                            "last_name",
                            "first_name",
                            "merge_categories",
                            "new_york_city_neighborhood",
                            "favorite_tv_shows",
                            "favorite_watch",
                        ],
                        properties: {
                            email_addresses: {
                                type: "array",
                                items: {
                                    type: "object",
                                    properties: {
                                        value: {
                                            type: "string",
                                            title: "value",
                                        },
                                        email_address_type: {
                                            type: "string",
                                            title: "email_address_type",
                                        },
                                        integration_params: {
                                            type: "object",
                                            title: "integration_params",
                                            properties: {},
                                        },
                                        linked_account_params: {
                                            type: "object",
                                            title: "linked_account_params",
                                            properties: {},
                                        },
                                    },
                                },
                                title: "email_addresses",
                                description: "Array of email_addresses objects",
                            },
                            urls: {
                                type: "array",
                                items: {
                                    type: "object",
                                    properties: {
                                        value: {
                                            type: "string",
                                            title: "value",
                                        },
                                        url_type: {
                                            type: "string",
                                            title: "url_type",
                                        },
                                        integration_params: {
                                            type: "object",
                                            title: "integration_params",
                                            properties: {},
                                        },
                                        linked_account_params: {
                                            type: "object",
                                            title: "linked_account_params",
                                            properties: {},
                                        },
                                    },
                                },
                                title: "urls",
                                description: "Array of urls objects",
                            },
                            first_name: {
                                type: "string",
                                title: "first_name",
                                description: "The first name.",
                            },
                            last_name: {
                                type: "string",
                                title: "last_name",
                                description: "The last name.",
                            },
                            phone_numbers: {
                                type: "array",
                                items: {
                                    type: "object",
                                    properties: {
                                        value: {
                                            type: "string",
                                            title: "value",
                                        },
                                        phone_number_type: {
                                            type: "string",
                                            title: "phone_number_type",
                                        },
                                        integration_params: {
                                            type: "object",
                                            title: "integration_params",
                                            properties: {},
                                        },
                                        linked_account_params: {
                                            type: "object",
                                            title: "linked_account_params",
                                            properties: {},
                                        },
                                    },
                                },
                                title: "phone_numbers",
                                description: "Array of phone_numbers objects",
                            },
                            tags: {
                                type: "array",
                                items: {
                                    type: "string",
                                    format: "uuid",
                                },
                                title: "tags",
                                description: "Array of tags names",
                            },
                            attachments: {
                                type: "array",
                                items: {
                                    type: "object",
                                    properties: {
                                        id: {
                                            type: "string",
                                            title: "id",
                                        },
                                        file_url: {
                                            type: "string",
                                            title: "file_url",
                                        },
                                        file_name: {
                                            type: "string",
                                            title: "file_name",
                                        },
                                        attachment_type: {
                                            type: "string",
                                            title: "attachment_type",
                                        },
                                        integration_params: {
                                            type: "object",
                                            title: "integration_params",
                                            properties: {},
                                        },
                                        linked_account_params: {
                                            type: "object",
                                            title: "linked_account_params",
                                            properties: {},
                                        },
                                    },
                                },
                                title: "attachments",
                                description: "Array of attachments objects ",
                            },
                            merge_categories: {
                                type: "array",
                                categories: {
                                    type: "string",
                                    enum: [
                                        "HRIS",
                                        "ATS",
                                        "Accounting",
                                        "Ticketing",
                                        "File Storage",
                                        "CRM",
                                        "Marketing Automation",
                                    ],
                                    enum_information: [
                                        {
                                            value: "HRIS",
                                            description: "Merge HRIS Category",
                                        },
                                        {
                                            value: "ATS",
                                            description: "Merge ATS Category",
                                        },
                                        {
                                            value: "Accounting",
                                            description: "Merge Accounting Category",
                                        },
                                        {
                                            value: "Ticketing",
                                            description: "Merge Ticketing Category",
                                        },
                                        {
                                            value: "File Storage",
                                            description: "Merge File Storage Category",
                                        },
                                        {
                                            value: "CRM",
                                            description: "Merge CRM Category",
                                        },
                                        {
                                            value: "Marketing Automation",
                                            description: "Merge Marketing Automation Category",
                                        },
                                    ],
                                },
                                title: "Merge Categories",
                                description: "Array of Merge's Unified API Categories",
                            },
                            new_york_city_neighborhood: {
                                type: "string",
                                title: "Borough",
                                description: "One of the 5 Boroughs of New York City",
                            },
                            favorite_tv_shows: {
                                type: "array",
                                items: {
                                    type: "string",
                                    format: "uuid",
                                },
                                title: "Favorite TV Shows",
                                description: "Array of TV Show objects on merge.tv_shows",
                            },
                            favorite_watch: {
                                type: "string",
                                title: "Favorite Watch",
                                description: "Favorite watch of all time",
                            },
                        },
                    },
                },
            },
            remoteFieldClasses: {
                key: "value",
            },
            status: {
                linkedAccountStatus: "linked_account_status",
                canMakeRequest: true,
            },
            hasConditionalParams: true,
            hasRequiredLinkedAccountParams: true,
        });
    });
});
