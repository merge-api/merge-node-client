/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool.js";
import { MergeClient } from "../../../src/Client";

describe("Addresses", () => {
    test("retrieve", async () => {
        const server = mockServerPool.createServer();
        const client = new MergeClient({ apiKey: "test", accountToken: "test", environment: server.baseUrl });

        const rawResponseBody = {
            created_at: "2021-09-15T00:00:00Z",
            modified_at: "2021-10-16T00:00:00Z",
            type: "BILLING",
            street_1: "2920 Broadway",
            street_2: "2nd Floor",
            city: "New York",
            state: { key: "value" },
            country_subdivision: "NY",
            country: "AF",
            zip_code: "10027",
        };
        server
            .mockEndpoint()
            .get("/accounting/v1/addresses/id")
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.accounting.addresses.retrieve("id");
        expect(response).toEqual({
            createdAt: new Date("2021-09-15T00:00:00.000Z"),
            modifiedAt: new Date("2021-10-16T00:00:00.000Z"),
            type: "BILLING",
            street1: "2920 Broadway",
            street2: "2nd Floor",
            city: "New York",
            state: {
                key: "value",
            },
            countrySubdivision: "NY",
            country: "AF",
            zipCode: "10027",
        });
    });
});
