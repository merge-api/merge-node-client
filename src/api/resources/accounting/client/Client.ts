/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { AccountDetails } from "../resources/accountDetails/client/Client";
import { AccountToken } from "../resources/accountToken/client/Client";
import { AccountingPeriods } from "../resources/accountingPeriods/client/Client";
import { Accounts } from "../resources/accounts/client/Client";
import { Addresses } from "../resources/addresses/client/Client";
import { AsyncPassthrough } from "../resources/asyncPassthrough/client/Client";
import { AsyncTasks } from "../resources/asyncTasks/client/Client";
import { Attachments } from "../resources/attachments/client/Client";
import { AuditTrail } from "../resources/auditTrail/client/Client";
import { AvailableActions } from "../resources/availableActions/client/Client";
import { BalanceSheets } from "../resources/balanceSheets/client/Client";
import { BankFeedAccounts } from "../resources/bankFeedAccounts/client/Client";
import { BankFeedTransactions } from "../resources/bankFeedTransactions/client/Client";
import { CashFlowStatements } from "../resources/cashFlowStatements/client/Client";
import { CompanyInfo } from "../resources/companyInfo/client/Client";
import { Contacts } from "../resources/contacts/client/Client";
import { CreditNotes } from "../resources/creditNotes/client/Client";
import { Scopes } from "../resources/scopes/client/Client";
import { DeleteAccount } from "../resources/deleteAccount/client/Client";
import { Employees } from "../resources/employees/client/Client";
import { ExpenseReports } from "../resources/expenseReports/client/Client";
import { Expenses } from "../resources/expenses/client/Client";
import { FieldMapping } from "../resources/fieldMapping/client/Client";
import { GeneralLedgerTransactions } from "../resources/generalLedgerTransactions/client/Client";
import { GenerateKey } from "../resources/generateKey/client/Client";
import { IncomeStatements } from "../resources/incomeStatements/client/Client";
import { Invoices } from "../resources/invoices/client/Client";
import { Issues } from "../resources/issues/client/Client";
import { Items } from "../resources/items/client/Client";
import { JournalEntries } from "../resources/journalEntries/client/Client";
import { LinkToken } from "../resources/linkToken/client/Client";
import { LinkedAccounts } from "../resources/linkedAccounts/client/Client";
import { Passthrough } from "../resources/passthrough/client/Client";
import { PaymentMethods } from "../resources/paymentMethods/client/Client";
import { PaymentTerms } from "../resources/paymentTerms/client/Client";
import { Payments } from "../resources/payments/client/Client";
import { PhoneNumbers } from "../resources/phoneNumbers/client/Client";
import { Projects } from "../resources/projects/client/Client";
import { PurchaseOrders } from "../resources/purchaseOrders/client/Client";
import { RegenerateKey } from "../resources/regenerateKey/client/Client";
import { SyncStatus } from "../resources/syncStatus/client/Client";
import { ForceResync } from "../resources/forceResync/client/Client";
import { TaxRates } from "../resources/taxRates/client/Client";
import { TrackingCategories } from "../resources/trackingCategories/client/Client";
import { Transactions } from "../resources/transactions/client/Client";
import { VendorCredits } from "../resources/vendorCredits/client/Client";
import { WebhookReceivers } from "../resources/webhookReceivers/client/Client";

export declare namespace Accounting {
    export interface Options {
        environment?: core.Supplier<environments.MergeEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        apiKey: core.Supplier<core.BearerToken>;
        /** Override the X-Account-Token header */
        accountToken?: core.Supplier<string | undefined>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
        fetcher?: core.FetchFunction;
    }
}

export class Accounting {
    protected readonly _options: Accounting.Options;
    protected _accountDetails: AccountDetails | undefined;
    protected _accountToken: AccountToken | undefined;
    protected _accountingPeriods: AccountingPeriods | undefined;
    protected _accounts: Accounts | undefined;
    protected _addresses: Addresses | undefined;
    protected _asyncPassthrough: AsyncPassthrough | undefined;
    protected _asyncTasks: AsyncTasks | undefined;
    protected _attachments: Attachments | undefined;
    protected _auditTrail: AuditTrail | undefined;
    protected _availableActions: AvailableActions | undefined;
    protected _balanceSheets: BalanceSheets | undefined;
    protected _bankFeedAccounts: BankFeedAccounts | undefined;
    protected _bankFeedTransactions: BankFeedTransactions | undefined;
    protected _cashFlowStatements: CashFlowStatements | undefined;
    protected _companyInfo: CompanyInfo | undefined;
    protected _contacts: Contacts | undefined;
    protected _creditNotes: CreditNotes | undefined;
    protected _scopes: Scopes | undefined;
    protected _deleteAccount: DeleteAccount | undefined;
    protected _employees: Employees | undefined;
    protected _expenseReports: ExpenseReports | undefined;
    protected _expenses: Expenses | undefined;
    protected _fieldMapping: FieldMapping | undefined;
    protected _generalLedgerTransactions: GeneralLedgerTransactions | undefined;
    protected _generateKey: GenerateKey | undefined;
    protected _incomeStatements: IncomeStatements | undefined;
    protected _invoices: Invoices | undefined;
    protected _issues: Issues | undefined;
    protected _items: Items | undefined;
    protected _journalEntries: JournalEntries | undefined;
    protected _linkToken: LinkToken | undefined;
    protected _linkedAccounts: LinkedAccounts | undefined;
    protected _passthrough: Passthrough | undefined;
    protected _paymentMethods: PaymentMethods | undefined;
    protected _paymentTerms: PaymentTerms | undefined;
    protected _payments: Payments | undefined;
    protected _phoneNumbers: PhoneNumbers | undefined;
    protected _projects: Projects | undefined;
    protected _purchaseOrders: PurchaseOrders | undefined;
    protected _regenerateKey: RegenerateKey | undefined;
    protected _syncStatus: SyncStatus | undefined;
    protected _forceResync: ForceResync | undefined;
    protected _taxRates: TaxRates | undefined;
    protected _trackingCategories: TrackingCategories | undefined;
    protected _transactions: Transactions | undefined;
    protected _vendorCredits: VendorCredits | undefined;
    protected _webhookReceivers: WebhookReceivers | undefined;

    constructor(_options: Accounting.Options) {
        this._options = _options;
    }

    public get accountDetails(): AccountDetails {
        return (this._accountDetails ??= new AccountDetails(this._options));
    }

    public get accountToken(): AccountToken {
        return (this._accountToken ??= new AccountToken(this._options));
    }

    public get accountingPeriods(): AccountingPeriods {
        return (this._accountingPeriods ??= new AccountingPeriods(this._options));
    }

    public get accounts(): Accounts {
        return (this._accounts ??= new Accounts(this._options));
    }

    public get addresses(): Addresses {
        return (this._addresses ??= new Addresses(this._options));
    }

    public get asyncPassthrough(): AsyncPassthrough {
        return (this._asyncPassthrough ??= new AsyncPassthrough(this._options));
    }

    public get asyncTasks(): AsyncTasks {
        return (this._asyncTasks ??= new AsyncTasks(this._options));
    }

    public get attachments(): Attachments {
        return (this._attachments ??= new Attachments(this._options));
    }

    public get auditTrail(): AuditTrail {
        return (this._auditTrail ??= new AuditTrail(this._options));
    }

    public get availableActions(): AvailableActions {
        return (this._availableActions ??= new AvailableActions(this._options));
    }

    public get balanceSheets(): BalanceSheets {
        return (this._balanceSheets ??= new BalanceSheets(this._options));
    }

    public get bankFeedAccounts(): BankFeedAccounts {
        return (this._bankFeedAccounts ??= new BankFeedAccounts(this._options));
    }

    public get bankFeedTransactions(): BankFeedTransactions {
        return (this._bankFeedTransactions ??= new BankFeedTransactions(this._options));
    }

    public get cashFlowStatements(): CashFlowStatements {
        return (this._cashFlowStatements ??= new CashFlowStatements(this._options));
    }

    public get companyInfo(): CompanyInfo {
        return (this._companyInfo ??= new CompanyInfo(this._options));
    }

    public get contacts(): Contacts {
        return (this._contacts ??= new Contacts(this._options));
    }

    public get creditNotes(): CreditNotes {
        return (this._creditNotes ??= new CreditNotes(this._options));
    }

    public get scopes(): Scopes {
        return (this._scopes ??= new Scopes(this._options));
    }

    public get deleteAccount(): DeleteAccount {
        return (this._deleteAccount ??= new DeleteAccount(this._options));
    }

    public get employees(): Employees {
        return (this._employees ??= new Employees(this._options));
    }

    public get expenseReports(): ExpenseReports {
        return (this._expenseReports ??= new ExpenseReports(this._options));
    }

    public get expenses(): Expenses {
        return (this._expenses ??= new Expenses(this._options));
    }

    public get fieldMapping(): FieldMapping {
        return (this._fieldMapping ??= new FieldMapping(this._options));
    }

    public get generalLedgerTransactions(): GeneralLedgerTransactions {
        return (this._generalLedgerTransactions ??= new GeneralLedgerTransactions(this._options));
    }

    public get generateKey(): GenerateKey {
        return (this._generateKey ??= new GenerateKey(this._options));
    }

    public get incomeStatements(): IncomeStatements {
        return (this._incomeStatements ??= new IncomeStatements(this._options));
    }

    public get invoices(): Invoices {
        return (this._invoices ??= new Invoices(this._options));
    }

    public get issues(): Issues {
        return (this._issues ??= new Issues(this._options));
    }

    public get items(): Items {
        return (this._items ??= new Items(this._options));
    }

    public get journalEntries(): JournalEntries {
        return (this._journalEntries ??= new JournalEntries(this._options));
    }

    public get linkToken(): LinkToken {
        return (this._linkToken ??= new LinkToken(this._options));
    }

    public get linkedAccounts(): LinkedAccounts {
        return (this._linkedAccounts ??= new LinkedAccounts(this._options));
    }

    public get passthrough(): Passthrough {
        return (this._passthrough ??= new Passthrough(this._options));
    }

    public get paymentMethods(): PaymentMethods {
        return (this._paymentMethods ??= new PaymentMethods(this._options));
    }

    public get paymentTerms(): PaymentTerms {
        return (this._paymentTerms ??= new PaymentTerms(this._options));
    }

    public get payments(): Payments {
        return (this._payments ??= new Payments(this._options));
    }

    public get phoneNumbers(): PhoneNumbers {
        return (this._phoneNumbers ??= new PhoneNumbers(this._options));
    }

    public get projects(): Projects {
        return (this._projects ??= new Projects(this._options));
    }

    public get purchaseOrders(): PurchaseOrders {
        return (this._purchaseOrders ??= new PurchaseOrders(this._options));
    }

    public get regenerateKey(): RegenerateKey {
        return (this._regenerateKey ??= new RegenerateKey(this._options));
    }

    public get syncStatus(): SyncStatus {
        return (this._syncStatus ??= new SyncStatus(this._options));
    }

    public get forceResync(): ForceResync {
        return (this._forceResync ??= new ForceResync(this._options));
    }

    public get taxRates(): TaxRates {
        return (this._taxRates ??= new TaxRates(this._options));
    }

    public get trackingCategories(): TrackingCategories {
        return (this._trackingCategories ??= new TrackingCategories(this._options));
    }

    public get transactions(): Transactions {
        return (this._transactions ??= new Transactions(this._options));
    }

    public get vendorCredits(): VendorCredits {
        return (this._vendorCredits ??= new VendorCredits(this._options));
    }

    public get webhookReceivers(): WebhookReceivers {
        return (this._webhookReceivers ??= new WebhookReceivers(this._options));
    }
}
