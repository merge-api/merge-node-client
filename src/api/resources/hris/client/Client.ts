/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as environments from "../../../../environments";
import * as core from "../../../../core";
import { AccountDetails } from "../resources/accountDetails/client/Client";
import { AccountToken } from "../resources/accountToken/client/Client";
import { AsyncPassthrough } from "../resources/asyncPassthrough/client/Client";
import { AuditTrail } from "../resources/auditTrail/client/Client";
import { AvailableActions } from "../resources/availableActions/client/Client";
import { BankInfo } from "../resources/bankInfo/client/Client";
import { Benefits } from "../resources/benefits/client/Client";
import { Companies } from "../resources/companies/client/Client";
import { Scopes } from "../resources/scopes/client/Client";
import { DeleteAccount } from "../resources/deleteAccount/client/Client";
import { Dependents } from "../resources/dependents/client/Client";
import { EmployeePayrollRuns } from "../resources/employeePayrollRuns/client/Client";
import { Employees } from "../resources/employees/client/Client";
import { EmployerBenefits } from "../resources/employerBenefits/client/Client";
import { Employments } from "../resources/employments/client/Client";
import { FieldMapping } from "../resources/fieldMapping/client/Client";
import { GenerateKey } from "../resources/generateKey/client/Client";
import { Groups } from "../resources/groups/client/Client";
import { Issues } from "../resources/issues/client/Client";
import { LinkToken } from "../resources/linkToken/client/Client";
import { LinkedAccounts } from "../resources/linkedAccounts/client/Client";
import { Locations } from "../resources/locations/client/Client";
import { Passthrough } from "../resources/passthrough/client/Client";
import { PayGroups } from "../resources/payGroups/client/Client";
import { PayrollRuns } from "../resources/payrollRuns/client/Client";
import { RegenerateKey } from "../resources/regenerateKey/client/Client";
import { SyncStatus } from "../resources/syncStatus/client/Client";
import { ForceResync } from "../resources/forceResync/client/Client";
import { Teams } from "../resources/teams/client/Client";
import { TimeOff } from "../resources/timeOff/client/Client";
import { TimeOffBalances } from "../resources/timeOffBalances/client/Client";
import { TimesheetEntries } from "../resources/timesheetEntries/client/Client";
import { WebhookReceivers } from "../resources/webhookReceivers/client/Client";

export declare namespace Hris {
    export interface Options {
        environment?: core.Supplier<environments.MergeEnvironment | string>;
        /** Specify a custom URL to connect the client to. */
        baseUrl?: core.Supplier<string>;
        apiKey: core.Supplier<core.BearerToken>;
        /** Override the X-Account-Token header */
        accountToken?: core.Supplier<string | undefined>;
        /** Additional headers to include in requests. */
        headers?: Record<string, string | core.Supplier<string | undefined> | undefined>;
        fetcher?: core.FetchFunction;
    }
}

export class Hris {
    protected readonly _options: Hris.Options;
    protected _accountDetails: AccountDetails | undefined;
    protected _accountToken: AccountToken | undefined;
    protected _asyncPassthrough: AsyncPassthrough | undefined;
    protected _auditTrail: AuditTrail | undefined;
    protected _availableActions: AvailableActions | undefined;
    protected _bankInfo: BankInfo | undefined;
    protected _benefits: Benefits | undefined;
    protected _companies: Companies | undefined;
    protected _scopes: Scopes | undefined;
    protected _deleteAccount: DeleteAccount | undefined;
    protected _dependents: Dependents | undefined;
    protected _employeePayrollRuns: EmployeePayrollRuns | undefined;
    protected _employees: Employees | undefined;
    protected _employerBenefits: EmployerBenefits | undefined;
    protected _employments: Employments | undefined;
    protected _fieldMapping: FieldMapping | undefined;
    protected _generateKey: GenerateKey | undefined;
    protected _groups: Groups | undefined;
    protected _issues: Issues | undefined;
    protected _linkToken: LinkToken | undefined;
    protected _linkedAccounts: LinkedAccounts | undefined;
    protected _locations: Locations | undefined;
    protected _passthrough: Passthrough | undefined;
    protected _payGroups: PayGroups | undefined;
    protected _payrollRuns: PayrollRuns | undefined;
    protected _regenerateKey: RegenerateKey | undefined;
    protected _syncStatus: SyncStatus | undefined;
    protected _forceResync: ForceResync | undefined;
    protected _teams: Teams | undefined;
    protected _timeOff: TimeOff | undefined;
    protected _timeOffBalances: TimeOffBalances | undefined;
    protected _timesheetEntries: TimesheetEntries | undefined;
    protected _webhookReceivers: WebhookReceivers | undefined;

    constructor(_options: Hris.Options) {
        this._options = _options;
    }

    public get accountDetails(): AccountDetails {
        return (this._accountDetails ??= new AccountDetails(this._options));
    }

    public get accountToken(): AccountToken {
        return (this._accountToken ??= new AccountToken(this._options));
    }

    public get asyncPassthrough(): AsyncPassthrough {
        return (this._asyncPassthrough ??= new AsyncPassthrough(this._options));
    }

    public get auditTrail(): AuditTrail {
        return (this._auditTrail ??= new AuditTrail(this._options));
    }

    public get availableActions(): AvailableActions {
        return (this._availableActions ??= new AvailableActions(this._options));
    }

    public get bankInfo(): BankInfo {
        return (this._bankInfo ??= new BankInfo(this._options));
    }

    public get benefits(): Benefits {
        return (this._benefits ??= new Benefits(this._options));
    }

    public get companies(): Companies {
        return (this._companies ??= new Companies(this._options));
    }

    public get scopes(): Scopes {
        return (this._scopes ??= new Scopes(this._options));
    }

    public get deleteAccount(): DeleteAccount {
        return (this._deleteAccount ??= new DeleteAccount(this._options));
    }

    public get dependents(): Dependents {
        return (this._dependents ??= new Dependents(this._options));
    }

    public get employeePayrollRuns(): EmployeePayrollRuns {
        return (this._employeePayrollRuns ??= new EmployeePayrollRuns(this._options));
    }

    public get employees(): Employees {
        return (this._employees ??= new Employees(this._options));
    }

    public get employerBenefits(): EmployerBenefits {
        return (this._employerBenefits ??= new EmployerBenefits(this._options));
    }

    public get employments(): Employments {
        return (this._employments ??= new Employments(this._options));
    }

    public get fieldMapping(): FieldMapping {
        return (this._fieldMapping ??= new FieldMapping(this._options));
    }

    public get generateKey(): GenerateKey {
        return (this._generateKey ??= new GenerateKey(this._options));
    }

    public get groups(): Groups {
        return (this._groups ??= new Groups(this._options));
    }

    public get issues(): Issues {
        return (this._issues ??= new Issues(this._options));
    }

    public get linkToken(): LinkToken {
        return (this._linkToken ??= new LinkToken(this._options));
    }

    public get linkedAccounts(): LinkedAccounts {
        return (this._linkedAccounts ??= new LinkedAccounts(this._options));
    }

    public get locations(): Locations {
        return (this._locations ??= new Locations(this._options));
    }

    public get passthrough(): Passthrough {
        return (this._passthrough ??= new Passthrough(this._options));
    }

    public get payGroups(): PayGroups {
        return (this._payGroups ??= new PayGroups(this._options));
    }

    public get payrollRuns(): PayrollRuns {
        return (this._payrollRuns ??= new PayrollRuns(this._options));
    }

    public get regenerateKey(): RegenerateKey {
        return (this._regenerateKey ??= new RegenerateKey(this._options));
    }

    public get syncStatus(): SyncStatus {
        return (this._syncStatus ??= new SyncStatus(this._options));
    }

    public get forceResync(): ForceResync {
        return (this._forceResync ??= new ForceResync(this._options));
    }

    public get teams(): Teams {
        return (this._teams ??= new Teams(this._options));
    }

    public get timeOff(): TimeOff {
        return (this._timeOff ??= new TimeOff(this._options));
    }

    public get timeOffBalances(): TimeOffBalances {
        return (this._timeOffBalances ??= new TimeOffBalances(this._options));
    }

    public get timesheetEntries(): TimesheetEntries {
        return (this._timesheetEntries ??= new TimesheetEntries(this._options));
    }

    public get webhookReceivers(): WebhookReceivers {
        return (this._webhookReceivers ??= new WebhookReceivers(this._options));
    }
}
