/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Merge from "../../../index";

/**
 * # The Comment Object
 * ### Description
 * The `Comment` object is used to represent a comment on a ticket.
 *
 * ### Usage Example
 * TODO
 */
export interface Comment {
    id?: string;
    /** The third-party API ID of the matching object. */
    remoteId?: string;
    /** The datetime that this object was created by Merge. */
    createdAt?: Date;
    /** The datetime that this object was modified by Merge. */
    modifiedAt?: Date;
    /** The author of the Comment, if the author is a User. If the third party does not support specifying an author, we will append "[Posted on behalf of {name}]" to the comment. */
    user?: Merge.ticketing.CommentUser;
    /** The author of the Comment, if the author is a Contact.If the third party does not support specifying an author, we will append "[Posted on behalf of {name}]" to the comment. */
    contact?: Merge.ticketing.CommentContact;
    /** The comment's text body. */
    body?: string;
    /** The comment's text body formatted as html. */
    htmlBody?: string;
    /** The ticket associated with the comment. */
    ticket?: Merge.ticketing.CommentTicket;
    /** Whether or not the comment is internal. */
    isPrivate?: boolean;
    /** When the third party's comment was created. */
    remoteCreatedAt?: Date;
    /** Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
    remoteWasDeleted?: boolean;
    fieldMappings?: Record<string, unknown>;
    remoteData?: Merge.ticketing.RemoteData[];
}
