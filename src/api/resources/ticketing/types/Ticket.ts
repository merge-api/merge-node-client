/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Merge from "../../../index";

/**
 * # The Ticket Object
 *
 * ### Description
 *
 * The `Ticket` object is used to represent a ticket, issue, task or case.
 *
 * ### Usage Example
 *
 * TODO
 */
export interface Ticket {
    id?: string;
    /** The third-party API ID of the matching object. */
    remoteId?: string;
    /** The datetime that this object was created by Merge. */
    createdAt?: Date;
    /** The datetime that this object was modified by Merge. */
    modifiedAt?: Date;
    /** The ticket's name. */
    name?: string;
    /** The individual `Users` who are assigned to this ticket. This does not include `Users` who just have view access to this ticket. */
    assignees?: (Merge.ticketing.TicketAssigneesItem | undefined)[];
    /** The `Teams` that are assigned to this ticket. This does not include `Teams` who just have view access to this ticket. */
    assignedTeams?: (Merge.ticketing.TicketAssignedTeamsItem | undefined)[];
    /** The user who created this ticket. */
    creator?: Merge.ticketing.TicketCreator;
    /** The ticket's due date. */
    dueDate?: Date;
    /**
     * The current status of the ticket.
     *
     * - `OPEN` - OPEN
     * - `CLOSED` - CLOSED
     * - `IN_PROGRESS` - IN_PROGRESS
     * - `ON_HOLD` - ON_HOLD
     */
    status?: Merge.ticketing.TicketStatus;
    /** The ticketâ€™s description. HTML version of description is mapped if supported by the third-party platform. */
    description?: string;
    /** The `Collections` that this `Ticket` is included in. */
    collections?: (Merge.ticketing.TicketCollectionsItem | undefined)[];
    /** The sub category of the ticket within the 3rd party system. Examples include incident, task, subtask or to-do. */
    ticketType?: string;
    /** The account associated with the ticket. */
    account?: Merge.ticketing.TicketAccount;
    /** The contact associated with the ticket. */
    contact?: Merge.ticketing.TicketContact;
    /** The ticket's parent ticket. */
    parentTicket?: Merge.ticketing.TicketParentTicket;
    attachments?: (Merge.ticketing.TicketAttachmentsItem | undefined)[];
    tags?: (string | undefined)[];
    roles?: (string | undefined)[];
    /** When the third party's ticket was created. */
    remoteCreatedAt?: Date;
    /** When the third party's ticket was updated. */
    remoteUpdatedAt?: Date;
    /** When the ticket was completed. */
    completedAt?: Date;
    /** Indicates whether or not this object has been deleted in the third party platform. Full coverage deletion detection is a premium add-on. Native deletion detection is offered for free with limited coverage. [Learn more](https://docs.merge.dev/integrations/hris/supported-features/). */
    remoteWasDeleted?: boolean;
    /** The 3rd party url of the Ticket. */
    ticketUrl?: string;
    /**
     * The priority or urgency of the Ticket.
     *
     * - `URGENT` - URGENT
     * - `HIGH` - HIGH
     * - `NORMAL` - NORMAL
     * - `LOW` - LOW
     */
    priority?: Merge.ticketing.TicketPriority;
    fieldMappings?: Record<string, unknown>;
    remoteData?: Merge.ticketing.RemoteData[];
    remoteFields?: Merge.ticketing.RemoteField[];
}
