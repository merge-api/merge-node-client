/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Merge from "../../../index";

/**
 * # The DataPassthrough Object
 * ### Description
 * The `DataPassthrough` object is used to send information to an otherwise-unsupported third-party endpoint.
 *
 * ### Usage Example
 * Create a `DataPassthrough` to get team hierarchies from your Rippling integration.
 */
export interface DataPassthroughRequest {
    method: Merge.crm.MethodEnum;
    /** The path of the request in the third party's platform. */
    path: string;
    /** An optional override of the third party's base url for the request. */
    baseUrlOverride?: string;
    /** The data with the request. You must include a `request_format` parameter matching the data's format */
    data?: string;
    /** Pass an array of `MultipartFormField` objects in here instead of using the `data` param if `request_format` is set to `MULTIPART`. */
    multipartFormData?: Merge.crm.MultipartFormFieldRequest[];
    /** The headers to use for the request (Merge will handle the account's authorization headers). `Content-Type` header is required for passthrough. Choose content type corresponding to expected format of receiving server. */
    headers?: Record<string, unknown>;
    requestFormat?: Merge.crm.RequestFormatEnum;
    /** Optional. If true, the response will always be an object of the form `{"type": T, "value": ...}` where `T` will be one of `string, boolean, number, null, array, object`. */
    normalizeResponse?: boolean;
}
