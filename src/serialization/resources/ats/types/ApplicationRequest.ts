/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { ApplicationRequestCandidate } from "./ApplicationRequestCandidate";
import { ApplicationRequestJob } from "./ApplicationRequestJob";
import { ApplicationRequestOffersItem } from "./ApplicationRequestOffersItem";
import { ApplicationRequestCreditedTo } from "./ApplicationRequestCreditedTo";
import { ApplicationRequestScreeningQuestionAnswersItem } from "./ApplicationRequestScreeningQuestionAnswersItem";
import { ApplicationRequestCurrentStage } from "./ApplicationRequestCurrentStage";
import { ApplicationRequestRejectReason } from "./ApplicationRequestRejectReason";

export const ApplicationRequest: core.serialization.ObjectSchema<
    serializers.ats.ApplicationRequest.Raw,
    Merge.ats.ApplicationRequest
> = core.serialization.object({
    candidate: ApplicationRequestCandidate.optional(),
    job: ApplicationRequestJob.optional(),
    appliedAt: core.serialization.property("applied_at", core.serialization.date().optional()),
    rejectedAt: core.serialization.property("rejected_at", core.serialization.date().optional()),
    offers: core.serialization.list(ApplicationRequestOffersItem.optional()).optional(),
    source: core.serialization.string().optional(),
    creditedTo: core.serialization.property("credited_to", ApplicationRequestCreditedTo.optional()),
    screeningQuestionAnswers: core.serialization.property(
        "screening_question_answers",
        core.serialization.list(ApplicationRequestScreeningQuestionAnswersItem).optional()
    ),
    currentStage: core.serialization.property("current_stage", ApplicationRequestCurrentStage.optional()),
    rejectReason: core.serialization.property("reject_reason", ApplicationRequestRejectReason.optional()),
    remoteTemplateId: core.serialization.property("remote_template_id", core.serialization.string().optional()),
    integrationParams: core.serialization.property(
        "integration_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    linkedAccountParams: core.serialization.property(
        "linked_account_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
});

export declare namespace ApplicationRequest {
    interface Raw {
        candidate?: ApplicationRequestCandidate.Raw | null;
        job?: ApplicationRequestJob.Raw | null;
        applied_at?: string | null;
        rejected_at?: string | null;
        offers?: (ApplicationRequestOffersItem.Raw | null | undefined)[] | null;
        source?: string | null;
        credited_to?: ApplicationRequestCreditedTo.Raw | null;
        screening_question_answers?: ApplicationRequestScreeningQuestionAnswersItem.Raw[] | null;
        current_stage?: ApplicationRequestCurrentStage.Raw | null;
        reject_reason?: ApplicationRequestRejectReason.Raw | null;
        remote_template_id?: string | null;
        integration_params?: Record<string, unknown> | null;
        linked_account_params?: Record<string, unknown> | null;
    }
}
