/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { ActivityUser } from "./ActivityUser";
import { ActivityActivityType } from "./ActivityActivityType";
import { ActivityVisibility } from "./ActivityVisibility";
import { RemoteData } from "./RemoteData";

export const Activity: core.serialization.ObjectSchema<serializers.ats.Activity.Raw, Merge.ats.Activity> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
        user: ActivityUser.optional(),
        remoteCreatedAt: core.serialization.property("remote_created_at", core.serialization.date().optional()),
        activityType: core.serialization.property("activity_type", ActivityActivityType.optional()),
        subject: core.serialization.string().optional(),
        body: core.serialization.string().optional(),
        visibility: ActivityVisibility.optional(),
        candidate: core.serialization.string().optional(),
        remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
        fieldMappings: core.serialization.property(
            "field_mappings",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
        ),
        remoteData: core.serialization.property("remote_data", core.serialization.list(RemoteData).optional()),
    });

export declare namespace Activity {
    interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        user?: ActivityUser.Raw | null;
        remote_created_at?: string | null;
        activity_type?: ActivityActivityType.Raw | null;
        subject?: string | null;
        body?: string | null;
        visibility?: ActivityVisibility.Raw | null;
        candidate?: string | null;
        remote_was_deleted?: boolean | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: RemoteData.Raw[] | null;
    }
}
