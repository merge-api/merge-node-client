/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const Offer: core.serialization.ObjectSchema<serializers.ats.Offer.Raw, Merge.ats.Offer> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
        application: core.serialization.lazy(async () => (await import("../../..")).ats.OfferApplication).optional(),
        creator: core.serialization.lazy(async () => (await import("../../..")).ats.OfferCreator).optional(),
        remoteCreatedAt: core.serialization.property("remote_created_at", core.serialization.date().optional()),
        closedAt: core.serialization.property("closed_at", core.serialization.date().optional()),
        sentAt: core.serialization.property("sent_at", core.serialization.date().optional()),
        startDate: core.serialization.property("start_date", core.serialization.date().optional()),
        status: core.serialization.lazy(async () => (await import("../../..")).ats.OfferStatus).optional(),
        remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
        fieldMappings: core.serialization.property(
            "field_mappings",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
        ),
        remoteData: core.serialization.property(
            "remote_data",
            core.serialization
                .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.RemoteData))
                .optional()
        ),
    });

export declare namespace Offer {
    interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        application?: serializers.ats.OfferApplication.Raw | null;
        creator?: serializers.ats.OfferCreator.Raw | null;
        remote_created_at?: string | null;
        closed_at?: string | null;
        sent_at?: string | null;
        start_date?: string | null;
        status?: serializers.ats.OfferStatus.Raw | null;
        remote_was_deleted?: boolean | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: serializers.ats.RemoteData.Raw[] | null;
    }
}
