/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const FieldMappingApiInstanceResponse: core.serialization.ObjectSchema<
    serializers.ats.FieldMappingApiInstanceResponse.Raw,
    Merge.ats.FieldMappingApiInstanceResponse
> = core.serialization.object({
    activity: core.serialization.property(
        "Activity",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.FieldMappingApiInstance))
            .optional()
    ),
    application: core.serialization.property(
        "Application",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.FieldMappingApiInstance))
            .optional()
    ),
    attachment: core.serialization.property(
        "Attachment",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.FieldMappingApiInstance))
            .optional()
    ),
    candidate: core.serialization.property(
        "Candidate",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.FieldMappingApiInstance))
            .optional()
    ),
    department: core.serialization.property(
        "Department",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.FieldMappingApiInstance))
            .optional()
    ),
    eeoc: core.serialization.property(
        "EEOC",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.FieldMappingApiInstance))
            .optional()
    ),
    scheduledInterview: core.serialization.property(
        "ScheduledInterview",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.FieldMappingApiInstance))
            .optional()
    ),
    job: core.serialization.property(
        "Job",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.FieldMappingApiInstance))
            .optional()
    ),
    jobPosting: core.serialization.property(
        "JobPosting",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.FieldMappingApiInstance))
            .optional()
    ),
    jobInterviewStage: core.serialization.property(
        "JobInterviewStage",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.FieldMappingApiInstance))
            .optional()
    ),
    offer: core.serialization.property(
        "Offer",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.FieldMappingApiInstance))
            .optional()
    ),
    office: core.serialization.property(
        "Office",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.FieldMappingApiInstance))
            .optional()
    ),
    rejectReason: core.serialization.property(
        "RejectReason",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.FieldMappingApiInstance))
            .optional()
    ),
    scorecard: core.serialization.property(
        "Scorecard",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.FieldMappingApiInstance))
            .optional()
    ),
    tag: core.serialization.property(
        "Tag",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.FieldMappingApiInstance))
            .optional()
    ),
    remoteUser: core.serialization.property(
        "RemoteUser",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).ats.FieldMappingApiInstance))
            .optional()
    ),
});

export declare namespace FieldMappingApiInstanceResponse {
    interface Raw {
        Activity?: serializers.ats.FieldMappingApiInstance.Raw[] | null;
        Application?: serializers.ats.FieldMappingApiInstance.Raw[] | null;
        Attachment?: serializers.ats.FieldMappingApiInstance.Raw[] | null;
        Candidate?: serializers.ats.FieldMappingApiInstance.Raw[] | null;
        Department?: serializers.ats.FieldMappingApiInstance.Raw[] | null;
        EEOC?: serializers.ats.FieldMappingApiInstance.Raw[] | null;
        ScheduledInterview?: serializers.ats.FieldMappingApiInstance.Raw[] | null;
        Job?: serializers.ats.FieldMappingApiInstance.Raw[] | null;
        JobPosting?: serializers.ats.FieldMappingApiInstance.Raw[] | null;
        JobInterviewStage?: serializers.ats.FieldMappingApiInstance.Raw[] | null;
        Offer?: serializers.ats.FieldMappingApiInstance.Raw[] | null;
        Office?: serializers.ats.FieldMappingApiInstance.Raw[] | null;
        RejectReason?: serializers.ats.FieldMappingApiInstance.Raw[] | null;
        Scorecard?: serializers.ats.FieldMappingApiInstance.Raw[] | null;
        Tag?: serializers.ats.FieldMappingApiInstance.Raw[] | null;
        RemoteUser?: serializers.ats.FieldMappingApiInstance.Raw[] | null;
    }
}
