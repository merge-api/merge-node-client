/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { FieldMappingApiInstance } from "./FieldMappingApiInstance";

export const FieldMappingApiInstanceResponse: core.serialization.ObjectSchema<
    serializers.ats.FieldMappingApiInstanceResponse.Raw,
    Merge.ats.FieldMappingApiInstanceResponse
> = core.serialization.object({
    activity: core.serialization.property("Activity", core.serialization.list(FieldMappingApiInstance).optional()),
    application: core.serialization.property(
        "Application",
        core.serialization.list(FieldMappingApiInstance).optional(),
    ),
    attachment: core.serialization.property("Attachment", core.serialization.list(FieldMappingApiInstance).optional()),
    candidate: core.serialization.property("Candidate", core.serialization.list(FieldMappingApiInstance).optional()),
    department: core.serialization.property("Department", core.serialization.list(FieldMappingApiInstance).optional()),
    eeoc: core.serialization.property("EEOC", core.serialization.list(FieldMappingApiInstance).optional()),
    scheduledInterview: core.serialization.property(
        "ScheduledInterview",
        core.serialization.list(FieldMappingApiInstance).optional(),
    ),
    job: core.serialization.property("Job", core.serialization.list(FieldMappingApiInstance).optional()),
    jobPosting: core.serialization.property("JobPosting", core.serialization.list(FieldMappingApiInstance).optional()),
    jobInterviewStage: core.serialization.property(
        "JobInterviewStage",
        core.serialization.list(FieldMappingApiInstance).optional(),
    ),
    offer: core.serialization.property("Offer", core.serialization.list(FieldMappingApiInstance).optional()),
    office: core.serialization.property("Office", core.serialization.list(FieldMappingApiInstance).optional()),
    rejectReason: core.serialization.property(
        "RejectReason",
        core.serialization.list(FieldMappingApiInstance).optional(),
    ),
    scorecard: core.serialization.property("Scorecard", core.serialization.list(FieldMappingApiInstance).optional()),
    tag: core.serialization.property("Tag", core.serialization.list(FieldMappingApiInstance).optional()),
    remoteUser: core.serialization.property("RemoteUser", core.serialization.list(FieldMappingApiInstance).optional()),
});

export declare namespace FieldMappingApiInstanceResponse {
    export interface Raw {
        Activity?: FieldMappingApiInstance.Raw[] | null;
        Application?: FieldMappingApiInstance.Raw[] | null;
        Attachment?: FieldMappingApiInstance.Raw[] | null;
        Candidate?: FieldMappingApiInstance.Raw[] | null;
        Department?: FieldMappingApiInstance.Raw[] | null;
        EEOC?: FieldMappingApiInstance.Raw[] | null;
        ScheduledInterview?: FieldMappingApiInstance.Raw[] | null;
        Job?: FieldMappingApiInstance.Raw[] | null;
        JobPosting?: FieldMappingApiInstance.Raw[] | null;
        JobInterviewStage?: FieldMappingApiInstance.Raw[] | null;
        Offer?: FieldMappingApiInstance.Raw[] | null;
        Office?: FieldMappingApiInstance.Raw[] | null;
        RejectReason?: FieldMappingApiInstance.Raw[] | null;
        Scorecard?: FieldMappingApiInstance.Raw[] | null;
        Tag?: FieldMappingApiInstance.Raw[] | null;
        RemoteUser?: FieldMappingApiInstance.Raw[] | null;
    }
}
