/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { ScorecardApplication } from "./ScorecardApplication";
import { ScorecardInterview } from "./ScorecardInterview";
import { ScorecardInterviewer } from "./ScorecardInterviewer";
import { ScorecardOverallRecommendation } from "./ScorecardOverallRecommendation";
import { RemoteData } from "./RemoteData";

export const Scorecard: core.serialization.ObjectSchema<serializers.ats.Scorecard.Raw, Merge.ats.Scorecard> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
        application: ScorecardApplication.optional(),
        interview: ScorecardInterview.optional(),
        interviewer: ScorecardInterviewer.optional(),
        remoteCreatedAt: core.serialization.property("remote_created_at", core.serialization.date().optional()),
        submittedAt: core.serialization.property("submitted_at", core.serialization.date().optional()),
        overallRecommendation: core.serialization.property(
            "overall_recommendation",
            ScorecardOverallRecommendation.optional(),
        ),
        remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
        fieldMappings: core.serialization.property(
            "field_mappings",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        ),
        remoteData: core.serialization.property("remote_data", core.serialization.list(RemoteData).optional()),
    });

export declare namespace Scorecard {
    export interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        application?: ScorecardApplication.Raw | null;
        interview?: ScorecardInterview.Raw | null;
        interviewer?: ScorecardInterviewer.Raw | null;
        remote_created_at?: string | null;
        submitted_at?: string | null;
        overall_recommendation?: ScorecardOverallRecommendation.Raw | null;
        remote_was_deleted?: boolean | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: RemoteData.Raw[] | null;
    }
}
