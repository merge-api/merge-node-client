/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const User: core.serialization.ObjectSchema<serializers.ticketing.User.Raw, Merge.ticketing.User> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
        name: core.serialization.string().optional(),
        emailAddress: core.serialization.property("email_address", core.serialization.string().optional()),
        isActive: core.serialization.property("is_active", core.serialization.boolean().optional()),
        teams: core.serialization
            .list(core.serialization.lazy(async () => (await import("../../..")).ticketing.UserTeamsItem).optional())
            .optional(),
        roles: core.serialization
            .list(core.serialization.lazy(async () => (await import("../../..")).ticketing.UserRolesItem).optional())
            .optional(),
        avatar: core.serialization.string().optional(),
        remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
        fieldMappings: core.serialization.property(
            "field_mappings",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
        ),
        remoteData: core.serialization.property(
            "remote_data",
            core.serialization
                .list(core.serialization.lazyObject(async () => (await import("../../..")).ticketing.RemoteData))
                .optional()
        ),
    });

export declare namespace User {
    interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        name?: string | null;
        email_address?: string | null;
        is_active?: boolean | null;
        teams?: (serializers.ticketing.UserTeamsItem.Raw | null | undefined)[] | null;
        roles?: (serializers.ticketing.UserRolesItem.Raw | null | undefined)[] | null;
        avatar?: string | null;
        remote_was_deleted?: boolean | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: serializers.ticketing.RemoteData.Raw[] | null;
    }
}
