/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { AccountDetailsAndActionsCategory } from "./AccountDetailsAndActionsCategory";
import { AccountDetailsAndActionsStatus } from "./AccountDetailsAndActionsStatus";
import { AccountDetailsAndActionsIntegration } from "./AccountDetailsAndActionsIntegration";

export const AccountDetailsAndActions: core.serialization.ObjectSchema<
    serializers.ticketing.AccountDetailsAndActions.Raw,
    Merge.ticketing.AccountDetailsAndActions
> = core.serialization.object({
    id: core.serialization.string(),
    category: AccountDetailsAndActionsCategory.optional(),
    status: AccountDetailsAndActionsStatus,
    statusDetail: core.serialization.property("status_detail", core.serialization.string().optional()),
    endUserOriginId: core.serialization.property("end_user_origin_id", core.serialization.string().optional()),
    endUserOrganizationName: core.serialization.property("end_user_organization_name", core.serialization.string()),
    endUserEmailAddress: core.serialization.property("end_user_email_address", core.serialization.string()),
    subdomain: core.serialization.string().optional(),
    webhookListenerUrl: core.serialization.property("webhook_listener_url", core.serialization.string()),
    isDuplicate: core.serialization.property("is_duplicate", core.serialization.boolean().optional()),
    integration: AccountDetailsAndActionsIntegration.optional(),
    accountType: core.serialization.property("account_type", core.serialization.string()),
    completedAt: core.serialization.property("completed_at", core.serialization.date()),
    integrationSpecificFields: core.serialization.property(
        "integration_specific_fields",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    ),
});

export declare namespace AccountDetailsAndActions {
    export interface Raw {
        id: string;
        category?: AccountDetailsAndActionsCategory.Raw | null;
        status: AccountDetailsAndActionsStatus.Raw;
        status_detail?: string | null;
        end_user_origin_id?: string | null;
        end_user_organization_name: string;
        end_user_email_address: string;
        subdomain?: string | null;
        webhook_listener_url: string;
        is_duplicate?: boolean | null;
        integration?: AccountDetailsAndActionsIntegration.Raw | null;
        account_type: string;
        completed_at: string;
        integration_specific_fields?: Record<string, unknown> | null;
    }
}
