/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const ContactRequest: core.serialization.ObjectSchema<
    serializers.ticketing.ContactRequest.Raw,
    Merge.ticketing.ContactRequest
> = core.serialization.object({
    name: core.serialization.string().optional(),
    emailAddress: core.serialization.property("email_address", core.serialization.string().optional()),
    phoneNumber: core.serialization.property("phone_number", core.serialization.string().optional()),
    details: core.serialization.string().optional(),
    account: core.serialization.lazy(async () => (await import("../../..")).ticketing.ContactRequestAccount).optional(),
    integrationParams: core.serialization.property(
        "integration_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    linkedAccountParams: core.serialization.property(
        "linked_account_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
});

export declare namespace ContactRequest {
    interface Raw {
        name?: string | null;
        email_address?: string | null;
        phone_number?: string | null;
        details?: string | null;
        account?: serializers.ticketing.ContactRequestAccount.Raw | null;
        integration_params?: Record<string, unknown> | null;
        linked_account_params?: Record<string, unknown> | null;
    }
}
