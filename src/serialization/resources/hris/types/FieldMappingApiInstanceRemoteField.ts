/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const FieldMappingApiInstanceRemoteField: core.serialization.ObjectSchema<
    serializers.hris.FieldMappingApiInstanceRemoteField.Raw,
    Merge.hris.FieldMappingApiInstanceRemoteField
> = core.serialization.object({
    remoteKeyName: core.serialization.property("remote_key_name", core.serialization.string()),
    schema: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    remoteEndpointInfo: core.serialization.property(
        "remote_endpoint_info",
        core.serialization.lazyObject(
            async () => (await import("../../..")).hris.FieldMappingApiInstanceRemoteFieldRemoteEndpointInfo
        )
    ),
});

export declare namespace FieldMappingApiInstanceRemoteField {
    interface Raw {
        remote_key_name: string;
        schema: Record<string, unknown>;
        remote_endpoint_info: serializers.hris.FieldMappingApiInstanceRemoteFieldRemoteEndpointInfo.Raw;
    }
}
