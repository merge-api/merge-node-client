/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { EmployeeRequestCompany } from "./EmployeeRequestCompany";
import { EmployeeRequestGroupsItem } from "./EmployeeRequestGroupsItem";
import { EmployeeRequestEmploymentsItem } from "./EmployeeRequestEmploymentsItem";
import { EmployeeRequestHomeLocation } from "./EmployeeRequestHomeLocation";
import { EmployeeRequestWorkLocation } from "./EmployeeRequestWorkLocation";
import { EmployeeRequestManager } from "./EmployeeRequestManager";
import { EmployeeRequestTeam } from "./EmployeeRequestTeam";
import { EmployeeRequestPayGroup } from "./EmployeeRequestPayGroup";
import { EmployeeRequestGender } from "./EmployeeRequestGender";
import { EmployeeRequestEthnicity } from "./EmployeeRequestEthnicity";
import { EmployeeRequestMaritalStatus } from "./EmployeeRequestMaritalStatus";
import { EmployeeRequestEmploymentStatus } from "./EmployeeRequestEmploymentStatus";

export const EmployeeRequest: core.serialization.ObjectSchema<
    serializers.hris.EmployeeRequest.Raw,
    Merge.hris.EmployeeRequest
> = core.serialization.object({
    employeeNumber: core.serialization.property("employee_number", core.serialization.string().optional()),
    company: EmployeeRequestCompany.optional(),
    firstName: core.serialization.property("first_name", core.serialization.string().optional()),
    lastName: core.serialization.property("last_name", core.serialization.string().optional()),
    preferredName: core.serialization.property("preferred_name", core.serialization.string().optional()),
    displayFullName: core.serialization.property("display_full_name", core.serialization.string().optional()),
    username: core.serialization.string().optional(),
    groups: core.serialization.list(EmployeeRequestGroupsItem.optional()).optional(),
    workEmail: core.serialization.property("work_email", core.serialization.string().optional()),
    personalEmail: core.serialization.property("personal_email", core.serialization.string().optional()),
    mobilePhoneNumber: core.serialization.property("mobile_phone_number", core.serialization.string().optional()),
    employments: core.serialization.list(EmployeeRequestEmploymentsItem.optional()).optional(),
    homeLocation: core.serialization.property("home_location", EmployeeRequestHomeLocation.optional()),
    workLocation: core.serialization.property("work_location", EmployeeRequestWorkLocation.optional()),
    manager: EmployeeRequestManager.optional(),
    team: EmployeeRequestTeam.optional(),
    payGroup: core.serialization.property("pay_group", EmployeeRequestPayGroup.optional()),
    ssn: core.serialization.string().optional(),
    gender: EmployeeRequestGender.optional(),
    ethnicity: EmployeeRequestEthnicity.optional(),
    maritalStatus: core.serialization.property("marital_status", EmployeeRequestMaritalStatus.optional()),
    dateOfBirth: core.serialization.property("date_of_birth", core.serialization.date().optional()),
    hireDate: core.serialization.property("hire_date", core.serialization.date().optional()),
    startDate: core.serialization.property("start_date", core.serialization.date().optional()),
    employmentStatus: core.serialization.property("employment_status", EmployeeRequestEmploymentStatus.optional()),
    terminationDate: core.serialization.property("termination_date", core.serialization.date().optional()),
    avatar: core.serialization.string().optional(),
    integrationParams: core.serialization.property(
        "integration_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    ),
    linkedAccountParams: core.serialization.property(
        "linked_account_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    ),
});

export declare namespace EmployeeRequest {
    export interface Raw {
        employee_number?: string | null;
        company?: EmployeeRequestCompany.Raw | null;
        first_name?: string | null;
        last_name?: string | null;
        preferred_name?: string | null;
        display_full_name?: string | null;
        username?: string | null;
        groups?: (EmployeeRequestGroupsItem.Raw | null | undefined)[] | null;
        work_email?: string | null;
        personal_email?: string | null;
        mobile_phone_number?: string | null;
        employments?: (EmployeeRequestEmploymentsItem.Raw | null | undefined)[] | null;
        home_location?: EmployeeRequestHomeLocation.Raw | null;
        work_location?: EmployeeRequestWorkLocation.Raw | null;
        manager?: EmployeeRequestManager.Raw | null;
        team?: EmployeeRequestTeam.Raw | null;
        pay_group?: EmployeeRequestPayGroup.Raw | null;
        ssn?: string | null;
        gender?: EmployeeRequestGender.Raw | null;
        ethnicity?: EmployeeRequestEthnicity.Raw | null;
        marital_status?: EmployeeRequestMaritalStatus.Raw | null;
        date_of_birth?: string | null;
        hire_date?: string | null;
        start_date?: string | null;
        employment_status?: EmployeeRequestEmploymentStatus.Raw | null;
        termination_date?: string | null;
        avatar?: string | null;
        integration_params?: Record<string, unknown> | null;
        linked_account_params?: Record<string, unknown> | null;
    }
}
