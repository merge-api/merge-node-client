/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { EmployerBenefitBenefitPlanType } from "./EmployerBenefitBenefitPlanType";

export const EmployerBenefit: core.serialization.ObjectSchema<
    serializers.hris.EmployerBenefit.Raw,
    Merge.hris.EmployerBenefit
> = core.serialization.object({
    id: core.serialization.string().optional(),
    remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
    benefitPlanType: core.serialization.property("benefit_plan_type", EmployerBenefitBenefitPlanType.optional()),
    name: core.serialization.string().optional(),
    description: core.serialization.string().optional(),
    deductionCode: core.serialization.property("deduction_code", core.serialization.string().optional()),
    remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
    fieldMappings: core.serialization.property(
        "field_mappings",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    remoteData: core.serialization.property(
        "remote_data",
        core.serialization
            .list(core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional())
            .optional()
    ),
});

export declare namespace EmployerBenefit {
    interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        benefit_plan_type?: EmployerBenefitBenefitPlanType.Raw | null;
        name?: string | null;
        description?: string | null;
        deduction_code?: string | null;
        remote_was_deleted?: boolean | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: (Record<string, unknown> | null | undefined)[] | null;
    }
}
