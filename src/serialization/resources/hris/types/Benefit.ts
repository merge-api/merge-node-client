/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { BenefitEmployee } from "./BenefitEmployee";
import { RemoteData } from "./RemoteData";

export const Benefit: core.serialization.ObjectSchema<serializers.hris.Benefit.Raw, Merge.hris.Benefit> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
        employee: BenefitEmployee.optional(),
        providerName: core.serialization.property("provider_name", core.serialization.string().optional()),
        benefitPlanType: core.serialization.property("benefit_plan_type", core.serialization.string().optional()),
        employeeContribution: core.serialization.property(
            "employee_contribution",
            core.serialization.number().optional(),
        ),
        companyContribution: core.serialization.property(
            "company_contribution",
            core.serialization.number().optional(),
        ),
        startDate: core.serialization.property("start_date", core.serialization.date().optional()),
        endDate: core.serialization.property("end_date", core.serialization.date().optional()),
        employerBenefit: core.serialization.property("employer_benefit", core.serialization.string().optional()),
        remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
        fieldMappings: core.serialization.property(
            "field_mappings",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        ),
        remoteData: core.serialization.property("remote_data", core.serialization.list(RemoteData).optional()),
    });

export declare namespace Benefit {
    export interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        employee?: BenefitEmployee.Raw | null;
        provider_name?: string | null;
        benefit_plan_type?: string | null;
        employee_contribution?: number | null;
        company_contribution?: number | null;
        start_date?: string | null;
        end_date?: string | null;
        employer_benefit?: string | null;
        remote_was_deleted?: boolean | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: RemoteData.Raw[] | null;
    }
}
