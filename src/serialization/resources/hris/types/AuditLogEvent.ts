/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { AuditLogEventRole } from "./AuditLogEventRole";
import { AuditLogEventEventType } from "./AuditLogEventEventType";

export const AuditLogEvent: core.serialization.ObjectSchema<
    serializers.hris.AuditLogEvent.Raw,
    Merge.hris.AuditLogEvent
> = core.serialization.object({
    id: core.serialization.string().optional(),
    userName: core.serialization.property("user_name", core.serialization.string().optional()),
    userEmail: core.serialization.property("user_email", core.serialization.string().optional()),
    role: AuditLogEventRole,
    ipAddress: core.serialization.property("ip_address", core.serialization.string()),
    eventType: core.serialization.property("event_type", AuditLogEventEventType),
    eventDescription: core.serialization.property("event_description", core.serialization.string()),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
});

export declare namespace AuditLogEvent {
    export interface Raw {
        id?: string | null;
        user_name?: string | null;
        user_email?: string | null;
        role: AuditLogEventRole.Raw;
        ip_address: string;
        event_type: AuditLogEventEventType.Raw;
        event_description: string;
        created_at?: string | null;
    }
}
