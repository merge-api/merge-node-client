/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { FolderDrive } from "./FolderDrive";
import { FolderPermissions } from "./FolderPermissions";

export const Folder: core.serialization.ObjectSchema<serializers.filestorage.Folder.Raw, Merge.filestorage.Folder> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
        name: core.serialization.string().optional(),
        folderUrl: core.serialization.property("folder_url", core.serialization.string().optional()),
        size: core.serialization.number().optional(),
        description: core.serialization.string().optional(),
        parentFolder: core.serialization.property(
            "parent_folder",
            core.serialization.lazy(() => serializers.filestorage.FolderParentFolder).optional()
        ),
        drive: FolderDrive.optional(),
        permissions: FolderPermissions.optional(),
        remoteCreatedAt: core.serialization.property("remote_created_at", core.serialization.date().optional()),
        remoteUpdatedAt: core.serialization.property("remote_updated_at", core.serialization.date().optional()),
        remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
        fieldMappings: core.serialization.property(
            "field_mappings",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
        ),
        remoteData: core.serialization.property(
            "remote_data",
            core.serialization
                .list(core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional())
                .optional()
        ),
    });

export declare namespace Folder {
    interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        name?: string | null;
        folder_url?: string | null;
        size?: number | null;
        description?: string | null;
        parent_folder?: serializers.filestorage.FolderParentFolder.Raw | null;
        drive?: FolderDrive.Raw | null;
        permissions?: FolderPermissions.Raw | null;
        remote_created_at?: string | null;
        remote_updated_at?: string | null;
        remote_was_deleted?: boolean | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: (Record<string, unknown> | null | undefined)[] | null;
    }
}
