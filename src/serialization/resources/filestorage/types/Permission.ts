/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { PermissionUser } from "./PermissionUser";
import { PermissionGroup } from "./PermissionGroup";
import { PermissionType } from "./PermissionType";
import { PermissionRolesItem } from "./PermissionRolesItem";

export const Permission: core.serialization.ObjectSchema<
    serializers.filestorage.Permission.Raw,
    Merge.filestorage.Permission
> = core.serialization.object({
    id: core.serialization.string().optional(),
    remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
    user: PermissionUser.optional(),
    group: PermissionGroup.optional(),
    type: PermissionType.optional(),
    roles: core.serialization.list(PermissionRolesItem.optional()).optional(),
});

export declare namespace Permission {
    interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        user?: PermissionUser.Raw | null;
        group?: PermissionGroup.Raw | null;
        type?: PermissionType.Raw | null;
        roles?: (PermissionRolesItem.Raw | null | undefined)[] | null;
    }
}
