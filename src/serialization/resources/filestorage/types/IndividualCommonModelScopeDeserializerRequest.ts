/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const IndividualCommonModelScopeDeserializerRequest: core.serialization.ObjectSchema<
    serializers.filestorage.IndividualCommonModelScopeDeserializerRequest.Raw,
    Merge.filestorage.IndividualCommonModelScopeDeserializerRequest
> = core.serialization.object({
    modelName: core.serialization.property("model_name", core.serialization.string()),
    modelPermissions: core.serialization.property(
        "model_permissions",
        core.serialization
            .record(
                core.serialization.string(),
                core.serialization.lazyObject(
                    async () => (await import("../../..")).filestorage.ModelPermissionDeserializerRequest
                )
            )
            .optional()
    ),
    fieldPermissions: core.serialization.property(
        "field_permissions",
        core.serialization
            .lazyObject(async () => (await import("../../..")).filestorage.FieldPermissionDeserializerRequest)
            .optional()
    ),
});

export declare namespace IndividualCommonModelScopeDeserializerRequest {
    interface Raw {
        model_name: string;
        model_permissions?: Record<string, serializers.filestorage.ModelPermissionDeserializerRequest.Raw> | null;
        field_permissions?: serializers.filestorage.FieldPermissionDeserializerRequest.Raw | null;
    }
}
