/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const FieldMappingApiInstanceResponse: core.serialization.ObjectSchema<
    serializers.crm.FieldMappingApiInstanceResponse.Raw,
    Merge.crm.FieldMappingApiInstanceResponse
> = core.serialization.object({
    account: core.serialization.property(
        "Account",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).crm.FieldMappingApiInstance))
            .optional()
    ),
    contact: core.serialization.property(
        "Contact",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).crm.FieldMappingApiInstance))
            .optional()
    ),
    lead: core.serialization.property(
        "Lead",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).crm.FieldMappingApiInstance))
            .optional()
    ),
    note: core.serialization.property(
        "Note",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).crm.FieldMappingApiInstance))
            .optional()
    ),
    opportunity: core.serialization.property(
        "Opportunity",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).crm.FieldMappingApiInstance))
            .optional()
    ),
    stage: core.serialization.property(
        "Stage",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).crm.FieldMappingApiInstance))
            .optional()
    ),
    user: core.serialization.property(
        "User",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).crm.FieldMappingApiInstance))
            .optional()
    ),
    task: core.serialization.property(
        "Task",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).crm.FieldMappingApiInstance))
            .optional()
    ),
    engagement: core.serialization.property(
        "Engagement",
        core.serialization
            .list(core.serialization.lazyObject(async () => (await import("../../..")).crm.FieldMappingApiInstance))
            .optional()
    ),
});

export declare namespace FieldMappingApiInstanceResponse {
    interface Raw {
        Account?: serializers.crm.FieldMappingApiInstance.Raw[] | null;
        Contact?: serializers.crm.FieldMappingApiInstance.Raw[] | null;
        Lead?: serializers.crm.FieldMappingApiInstance.Raw[] | null;
        Note?: serializers.crm.FieldMappingApiInstance.Raw[] | null;
        Opportunity?: serializers.crm.FieldMappingApiInstance.Raw[] | null;
        Stage?: serializers.crm.FieldMappingApiInstance.Raw[] | null;
        User?: serializers.crm.FieldMappingApiInstance.Raw[] | null;
        Task?: serializers.crm.FieldMappingApiInstance.Raw[] | null;
        Engagement?: serializers.crm.FieldMappingApiInstance.Raw[] | null;
    }
}
