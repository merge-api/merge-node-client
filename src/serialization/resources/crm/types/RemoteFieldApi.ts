/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import * as Merge from "../../../../api";
import * as core from "../../../../core";

export const RemoteFieldApi: core.serialization.ObjectSchema<
    serializers.crm.RemoteFieldApi.Raw,
    Merge.crm.RemoteFieldApi
> = core.serialization.object({
    schema: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    remoteKeyName: core.serialization.property("remote_key_name", core.serialization.string()),
    remoteEndpointInfo: core.serialization.property(
        "remote_endpoint_info",
        core.serialization.lazyObject(async () => (await import("../../..")).crm.RemoteEndpointInfo)
    ),
    exampleValues: core.serialization.property("example_values", core.serialization.list(core.serialization.unknown())),
    advancedMetadata: core.serialization.property(
        "advanced_metadata",
        core.serialization.lazyObject(async () => (await import("../../..")).crm.AdvancedMetadata).optional()
    ),
});

export declare namespace RemoteFieldApi {
    interface Raw {
        schema: Record<string, unknown>;
        remote_key_name: string;
        remote_endpoint_info: serializers.crm.RemoteEndpointInfo.Raw;
        example_values: unknown[];
        advanced_metadata?: serializers.crm.AdvancedMetadata.Raw | null;
    }
}
