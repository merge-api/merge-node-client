/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { NoteRequestOwner } from "./NoteRequestOwner";
import { NoteRequestContact } from "./NoteRequestContact";
import { NoteRequestAccount } from "./NoteRequestAccount";
import { NoteRequestOpportunity } from "./NoteRequestOpportunity";
import { RemoteFieldRequest } from "./RemoteFieldRequest";

export const NoteRequest: core.serialization.ObjectSchema<serializers.crm.NoteRequest.Raw, Merge.crm.NoteRequest> =
    core.serialization.object({
        owner: NoteRequestOwner.optional(),
        content: core.serialization.string().optional(),
        contact: NoteRequestContact.optional(),
        account: NoteRequestAccount.optional(),
        opportunity: NoteRequestOpportunity.optional(),
        integrationParams: core.serialization.property(
            "integration_params",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        ),
        linkedAccountParams: core.serialization.property(
            "linked_account_params",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        ),
        remoteFields: core.serialization.property(
            "remote_fields",
            core.serialization.list(RemoteFieldRequest).optional(),
        ),
    });

export declare namespace NoteRequest {
    export interface Raw {
        owner?: NoteRequestOwner.Raw | null;
        content?: string | null;
        contact?: NoteRequestContact.Raw | null;
        account?: NoteRequestAccount.Raw | null;
        opportunity?: NoteRequestOpportunity.Raw | null;
        integration_params?: Record<string, unknown> | null;
        linked_account_params?: Record<string, unknown> | null;
        remote_fields?: RemoteFieldRequest.Raw[] | null;
    }
}
