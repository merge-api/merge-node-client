/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { AddressCountry } from "./AddressCountry";
import { AddressAddressType } from "./AddressAddressType";

export const Address: core.serialization.ObjectSchema<serializers.crm.Address.Raw, Merge.crm.Address> =
    core.serialization.object({
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
        street1: core.serialization.property("street_1", core.serialization.string().optional()),
        street2: core.serialization.property("street_2", core.serialization.string().optional()),
        city: core.serialization.string().optional(),
        state: core.serialization.string().optional(),
        postalCode: core.serialization.property("postal_code", core.serialization.string().optional()),
        country: AddressCountry.optional(),
        addressType: core.serialization.property("address_type", AddressAddressType.optional()),
    });

export declare namespace Address {
    export interface Raw {
        created_at?: string | null;
        modified_at?: string | null;
        street_1?: string | null;
        street_2?: string | null;
        city?: string | null;
        state?: string | null;
        postal_code?: string | null;
        country?: AddressCountry.Raw | null;
        address_type?: AddressAddressType.Raw | null;
    }
}
