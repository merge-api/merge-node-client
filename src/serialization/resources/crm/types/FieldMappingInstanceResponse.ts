/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { FieldMappingApiInstance } from "./FieldMappingApiInstance";
import { WarningValidationProblem } from "./WarningValidationProblem";
import { ErrorValidationProblem } from "./ErrorValidationProblem";
import { DebugModeLog } from "./DebugModeLog";

export const FieldMappingInstanceResponse: core.serialization.ObjectSchema<
    serializers.crm.FieldMappingInstanceResponse.Raw,
    Merge.crm.FieldMappingInstanceResponse
> = core.serialization.object({
    model: FieldMappingApiInstance,
    warnings: core.serialization.list(WarningValidationProblem),
    errors: core.serialization.list(ErrorValidationProblem),
    logs: core.serialization.list(DebugModeLog).optional(),
});

export declare namespace FieldMappingInstanceResponse {
    export interface Raw {
        model: FieldMappingApiInstance.Raw;
        warnings: WarningValidationProblem.Raw[];
        errors: ErrorValidationProblem.Raw[];
        logs?: DebugModeLog.Raw[] | null;
    }
}
