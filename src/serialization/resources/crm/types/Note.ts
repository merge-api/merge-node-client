/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { NoteOwner } from "./NoteOwner";
import { NoteContact } from "./NoteContact";
import { NoteAccount } from "./NoteAccount";
import { NoteOpportunity } from "./NoteOpportunity";
import { RemoteData } from "./RemoteData";
import { RemoteField } from "./RemoteField";

export const Note: core.serialization.ObjectSchema<serializers.crm.Note.Raw, Merge.crm.Note> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
        owner: NoteOwner.optional(),
        content: core.serialization.string().optional(),
        contact: NoteContact.optional(),
        account: NoteAccount.optional(),
        opportunity: NoteOpportunity.optional(),
        remoteUpdatedAt: core.serialization.property("remote_updated_at", core.serialization.date().optional()),
        remoteCreatedAt: core.serialization.property("remote_created_at", core.serialization.date().optional()),
        remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
        fieldMappings: core.serialization.property(
            "field_mappings",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
        ),
        remoteData: core.serialization.property("remote_data", core.serialization.list(RemoteData).optional()),
        remoteFields: core.serialization.property("remote_fields", core.serialization.list(RemoteField).optional()),
    });

export declare namespace Note {
    interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        owner?: NoteOwner.Raw | null;
        content?: string | null;
        contact?: NoteContact.Raw | null;
        account?: NoteAccount.Raw | null;
        opportunity?: NoteOpportunity.Raw | null;
        remote_updated_at?: string | null;
        remote_created_at?: string | null;
        remote_was_deleted?: boolean | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: RemoteData.Raw[] | null;
        remote_fields?: RemoteField.Raw[] | null;
    }
}
