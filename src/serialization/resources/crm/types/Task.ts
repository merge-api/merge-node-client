/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { TaskOwner } from "./TaskOwner";
import { TaskAccount } from "./TaskAccount";
import { TaskOpportunity } from "./TaskOpportunity";
import { TaskStatus } from "./TaskStatus";
import { RemoteData } from "./RemoteData";
import { RemoteField } from "./RemoteField";

export const Task: core.serialization.ObjectSchema<serializers.crm.Task.Raw, Merge.crm.Task> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
        subject: core.serialization.string().optional(),
        content: core.serialization.string().optional(),
        owner: TaskOwner.optional(),
        account: TaskAccount.optional(),
        opportunity: TaskOpportunity.optional(),
        completedDate: core.serialization.property("completed_date", core.serialization.date().optional()),
        dueDate: core.serialization.property("due_date", core.serialization.date().optional()),
        status: TaskStatus.optional(),
        remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
        fieldMappings: core.serialization.property(
            "field_mappings",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
        ),
        remoteData: core.serialization.property("remote_data", core.serialization.list(RemoteData).optional()),
        remoteFields: core.serialization.property("remote_fields", core.serialization.list(RemoteField).optional()),
    });

export declare namespace Task {
    interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        subject?: string | null;
        content?: string | null;
        owner?: TaskOwner.Raw | null;
        account?: TaskAccount.Raw | null;
        opportunity?: TaskOpportunity.Raw | null;
        completed_date?: string | null;
        due_date?: string | null;
        status?: TaskStatus.Raw | null;
        remote_was_deleted?: boolean | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: RemoteData.Raw[] | null;
        remote_fields?: RemoteField.Raw[] | null;
    }
}
