/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { AssociationAssociationType } from "./AssociationAssociationType";

export const Association: core.serialization.ObjectSchema<serializers.crm.Association.Raw, Merge.crm.Association> =
    core.serialization.object({
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
        sourceObject: core.serialization.property("source_object", core.serialization.string().optional()),
        targetObject: core.serialization.property("target_object", core.serialization.string().optional()),
        associationType: core.serialization.property("association_type", AssociationAssociationType.optional()),
    });

export declare namespace Association {
    interface Raw {
        created_at?: string | null;
        modified_at?: string | null;
        source_object?: string | null;
        target_object?: string | null;
        association_type?: AssociationAssociationType.Raw | null;
    }
}
