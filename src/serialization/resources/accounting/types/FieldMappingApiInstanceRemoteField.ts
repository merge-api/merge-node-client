/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { FieldMappingApiInstanceRemoteFieldRemoteEndpointInfo } from "./FieldMappingApiInstanceRemoteFieldRemoteEndpointInfo";

export const FieldMappingApiInstanceRemoteField: core.serialization.ObjectSchema<
    serializers.accounting.FieldMappingApiInstanceRemoteField.Raw,
    Merge.accounting.FieldMappingApiInstanceRemoteField
> = core.serialization.object({
    remoteKeyName: core.serialization.property("remote_key_name", core.serialization.string().optional()),
    schema: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    remoteEndpointInfo: core.serialization.property(
        "remote_endpoint_info",
        FieldMappingApiInstanceRemoteFieldRemoteEndpointInfo
    ),
});

export declare namespace FieldMappingApiInstanceRemoteField {
    interface Raw {
        remote_key_name?: string | null;
        schema?: Record<string, unknown> | null;
        remote_endpoint_info: FieldMappingApiInstanceRemoteFieldRemoteEndpointInfo.Raw;
    }
}
