/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { InvoiceLineItemEmployee } from "./InvoiceLineItemEmployee";
import { InvoiceLineItemProject } from "./InvoiceLineItemProject";
import { InvoiceLineItemContact } from "./InvoiceLineItemContact";
import { InvoiceLineItemCurrency } from "./InvoiceLineItemCurrency";
import { InvoiceLineItemItem } from "./InvoiceLineItemItem";
import { InvoiceLineItemAccount } from "./InvoiceLineItemAccount";
import { InvoiceLineItemTrackingCategory } from "./InvoiceLineItemTrackingCategory";
import { InvoiceLineItemTrackingCategoriesItem } from "./InvoiceLineItemTrackingCategoriesItem";
import { RemoteField } from "./RemoteField";

export const InvoiceLineItem: core.serialization.ObjectSchema<
    serializers.accounting.InvoiceLineItem.Raw,
    Merge.accounting.InvoiceLineItem
> = core.serialization.object({
    id: core.serialization.string().optional(),
    remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
    description: core.serialization.string().optional(),
    unitPrice: core.serialization.property("unit_price", core.serialization.number().optional()),
    quantity: core.serialization.number().optional(),
    totalAmount: core.serialization.property("total_amount", core.serialization.number().optional()),
    employee: InvoiceLineItemEmployee.optional(),
    project: InvoiceLineItemProject.optional(),
    contact: InvoiceLineItemContact.optional(),
    currency: InvoiceLineItemCurrency.optional(),
    exchangeRate: core.serialization.property("exchange_rate", core.serialization.string().optional()),
    item: InvoiceLineItemItem.optional(),
    account: InvoiceLineItemAccount.optional(),
    taxRate: core.serialization.property("tax_rate", core.serialization.string().optional()),
    trackingCategory: core.serialization.property("tracking_category", InvoiceLineItemTrackingCategory.optional()),
    trackingCategories: core.serialization.property(
        "tracking_categories",
        core.serialization.list(InvoiceLineItemTrackingCategoriesItem.optional()).optional(),
    ),
    company: core.serialization.string().optional(),
    remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
    fieldMappings: core.serialization.property(
        "field_mappings",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    ),
    remoteFields: core.serialization.property("remote_fields", core.serialization.list(RemoteField).optional()),
});

export declare namespace InvoiceLineItem {
    export interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        description?: string | null;
        unit_price?: number | null;
        quantity?: number | null;
        total_amount?: number | null;
        employee?: InvoiceLineItemEmployee.Raw | null;
        project?: InvoiceLineItemProject.Raw | null;
        contact?: InvoiceLineItemContact.Raw | null;
        currency?: InvoiceLineItemCurrency.Raw | null;
        exchange_rate?: string | null;
        item?: InvoiceLineItemItem.Raw | null;
        account?: InvoiceLineItemAccount.Raw | null;
        tax_rate?: string | null;
        tracking_category?: InvoiceLineItemTrackingCategory.Raw | null;
        tracking_categories?: (InvoiceLineItemTrackingCategoriesItem.Raw | null | undefined)[] | null;
        company?: string | null;
        remote_was_deleted?: boolean | null;
        field_mappings?: Record<string, unknown> | null;
        remote_fields?: RemoteField.Raw[] | null;
    }
}
