/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { PurchaseOrderLineItemRequestItem } from "./PurchaseOrderLineItemRequestItem";
import { PurchaseOrderLineItemRequestCurrency } from "./PurchaseOrderLineItemRequestCurrency";
import { RemoteFieldRequest } from "./RemoteFieldRequest";

export const PurchaseOrderLineItemRequest: core.serialization.ObjectSchema<
    serializers.accounting.PurchaseOrderLineItemRequest.Raw,
    Merge.accounting.PurchaseOrderLineItemRequest
> = core.serialization.object({
    remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
    description: core.serialization.string().optional(),
    unitPrice: core.serialization.property("unit_price", core.serialization.number().optional()),
    quantity: core.serialization.number().optional(),
    item: PurchaseOrderLineItemRequestItem.optional(),
    account: core.serialization.string().optional(),
    trackingCategory: core.serialization.property("tracking_category", core.serialization.string().optional()),
    trackingCategories: core.serialization.property(
        "tracking_categories",
        core.serialization.list(core.serialization.string().optional()).optional()
    ),
    taxAmount: core.serialization.property("tax_amount", core.serialization.string().optional()),
    totalLineAmount: core.serialization.property("total_line_amount", core.serialization.string().optional()),
    currency: PurchaseOrderLineItemRequestCurrency.optional(),
    taxRate: core.serialization.property("tax_rate", core.serialization.string().optional()),
    exchangeRate: core.serialization.property("exchange_rate", core.serialization.string().optional()),
    company: core.serialization.string().optional(),
    integrationParams: core.serialization.property(
        "integration_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    linkedAccountParams: core.serialization.property(
        "linked_account_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    remoteFields: core.serialization.property("remote_fields", core.serialization.list(RemoteFieldRequest).optional()),
});

export declare namespace PurchaseOrderLineItemRequest {
    interface Raw {
        remote_id?: string | null;
        description?: string | null;
        unit_price?: number | null;
        quantity?: number | null;
        item?: PurchaseOrderLineItemRequestItem.Raw | null;
        account?: string | null;
        tracking_category?: string | null;
        tracking_categories?: (string | null | undefined)[] | null;
        tax_amount?: string | null;
        total_line_amount?: string | null;
        currency?: PurchaseOrderLineItemRequestCurrency.Raw | null;
        tax_rate?: string | null;
        exchange_rate?: string | null;
        company?: string | null;
        integration_params?: Record<string, unknown> | null;
        linked_account_params?: Record<string, unknown> | null;
        remote_fields?: RemoteFieldRequest.Raw[] | null;
    }
}
