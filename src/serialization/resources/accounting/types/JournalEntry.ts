/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { JournalEntryPaymentsItem } from "./JournalEntryPaymentsItem";
import { JournalEntryAppliedPaymentsItem } from "./JournalEntryAppliedPaymentsItem";
import { JournalEntryCurrency } from "./JournalEntryCurrency";
import { JournalEntryCompany } from "./JournalEntryCompany";
import { JournalLine } from "./JournalLine";
import { JournalEntryTrackingCategoriesItem } from "./JournalEntryTrackingCategoriesItem";
import { JournalEntryPostingStatus } from "./JournalEntryPostingStatus";
import { JournalEntryAccountingPeriod } from "./JournalEntryAccountingPeriod";
import { RemoteData } from "./RemoteData";
import { RemoteField } from "./RemoteField";

export const JournalEntry: core.serialization.ObjectSchema<
    serializers.accounting.JournalEntry.Raw,
    Merge.accounting.JournalEntry
> = core.serialization.object({
    id: core.serialization.string().optional(),
    remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
    transactionDate: core.serialization.property("transaction_date", core.serialization.date().optional()),
    payments: core.serialization.list(JournalEntryPaymentsItem.optional()).optional(),
    appliedPayments: core.serialization.property(
        "applied_payments",
        core.serialization.list(JournalEntryAppliedPaymentsItem.optional()).optional()
    ),
    memo: core.serialization.string().optional(),
    currency: JournalEntryCurrency.optional(),
    exchangeRate: core.serialization.property("exchange_rate", core.serialization.string().optional()),
    company: JournalEntryCompany.optional(),
    inclusiveOfTax: core.serialization.property("inclusive_of_tax", core.serialization.boolean().optional()),
    lines: core.serialization.list(JournalLine).optional(),
    journalNumber: core.serialization.property("journal_number", core.serialization.string().optional()),
    trackingCategories: core.serialization.property(
        "tracking_categories",
        core.serialization.list(JournalEntryTrackingCategoriesItem.optional()).optional()
    ),
    remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
    postingStatus: core.serialization.property("posting_status", JournalEntryPostingStatus.optional()),
    accountingPeriod: core.serialization.property("accounting_period", JournalEntryAccountingPeriod.optional()),
    remoteCreatedAt: core.serialization.property("remote_created_at", core.serialization.date().optional()),
    remoteUpdatedAt: core.serialization.property("remote_updated_at", core.serialization.date().optional()),
    fieldMappings: core.serialization.property(
        "field_mappings",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    remoteData: core.serialization.property("remote_data", core.serialization.list(RemoteData).optional()),
    remoteFields: core.serialization.property("remote_fields", core.serialization.list(RemoteField).optional()),
});

export declare namespace JournalEntry {
    interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        transaction_date?: string | null;
        payments?: (JournalEntryPaymentsItem.Raw | null | undefined)[] | null;
        applied_payments?: (JournalEntryAppliedPaymentsItem.Raw | null | undefined)[] | null;
        memo?: string | null;
        currency?: JournalEntryCurrency.Raw | null;
        exchange_rate?: string | null;
        company?: JournalEntryCompany.Raw | null;
        inclusive_of_tax?: boolean | null;
        lines?: JournalLine.Raw[] | null;
        journal_number?: string | null;
        tracking_categories?: (JournalEntryTrackingCategoriesItem.Raw | null | undefined)[] | null;
        remote_was_deleted?: boolean | null;
        posting_status?: JournalEntryPostingStatus.Raw | null;
        accounting_period?: JournalEntryAccountingPeriod.Raw | null;
        remote_created_at?: string | null;
        remote_updated_at?: string | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: RemoteData.Raw[] | null;
        remote_fields?: RemoteField.Raw[] | null;
    }
}
