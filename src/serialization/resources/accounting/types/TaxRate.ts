/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { TaxRateCompany } from "./TaxRateCompany";
import { TaxRateStatus } from "./TaxRateStatus";
import { TaxRateTaxComponentsItem } from "./TaxRateTaxComponentsItem";
import { RemoteData } from "./RemoteData";

export const TaxRate: core.serialization.ObjectSchema<serializers.accounting.TaxRate.Raw, Merge.accounting.TaxRate> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
        company: TaxRateCompany.optional(),
        code: core.serialization.string().optional(),
        name: core.serialization.string().optional(),
        description: core.serialization.string().optional(),
        status: TaxRateStatus.optional(),
        country: core.serialization.string().optional(),
        totalTaxRate: core.serialization.property("total_tax_rate", core.serialization.number().optional()),
        effectiveTaxRate: core.serialization.property("effective_tax_rate", core.serialization.number().optional()),
        taxComponents: core.serialization.property(
            "tax_components",
            core.serialization.list(TaxRateTaxComponentsItem).optional()
        ),
        remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
        fieldMappings: core.serialization.property(
            "field_mappings",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
        ),
        remoteData: core.serialization.property("remote_data", core.serialization.list(RemoteData).optional()),
    });

export declare namespace TaxRate {
    interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        company?: TaxRateCompany.Raw | null;
        code?: string | null;
        name?: string | null;
        description?: string | null;
        status?: TaxRateStatus.Raw | null;
        country?: string | null;
        total_tax_rate?: number | null;
        effective_tax_rate?: number | null;
        tax_components?: TaxRateTaxComponentsItem.Raw[] | null;
        remote_was_deleted?: boolean | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: RemoteData.Raw[] | null;
    }
}
