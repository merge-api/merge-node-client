/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { ItemStatus } from "./ItemStatus";
import { ItemPurchaseAccount } from "./ItemPurchaseAccount";
import { ItemSalesAccount } from "./ItemSalesAccount";
import { ItemCompany } from "./ItemCompany";
import { ItemPurchaseTaxRate } from "./ItemPurchaseTaxRate";
import { ItemSalesTaxRate } from "./ItemSalesTaxRate";
import { RemoteData } from "./RemoteData";

export const Item: core.serialization.ObjectSchema<serializers.accounting.Item.Raw, Merge.accounting.Item> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
        name: core.serialization.string().optional(),
        status: ItemStatus.optional(),
        unitPrice: core.serialization.property("unit_price", core.serialization.number().optional()),
        purchasePrice: core.serialization.property("purchase_price", core.serialization.number().optional()),
        purchaseAccount: core.serialization.property("purchase_account", ItemPurchaseAccount.optional()),
        salesAccount: core.serialization.property("sales_account", ItemSalesAccount.optional()),
        company: ItemCompany.optional(),
        purchaseTaxRate: core.serialization.property("purchase_tax_rate", ItemPurchaseTaxRate.optional()),
        salesTaxRate: core.serialization.property("sales_tax_rate", ItemSalesTaxRate.optional()),
        remoteUpdatedAt: core.serialization.property("remote_updated_at", core.serialization.date().optional()),
        remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
        fieldMappings: core.serialization.property(
            "field_mappings",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
        ),
        remoteData: core.serialization.property("remote_data", core.serialization.list(RemoteData).optional()),
    });

export declare namespace Item {
    interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        name?: string | null;
        status?: ItemStatus.Raw | null;
        unit_price?: number | null;
        purchase_price?: number | null;
        purchase_account?: ItemPurchaseAccount.Raw | null;
        sales_account?: ItemSalesAccount.Raw | null;
        company?: ItemCompany.Raw | null;
        purchase_tax_rate?: ItemPurchaseTaxRate.Raw | null;
        sales_tax_rate?: ItemSalesTaxRate.Raw | null;
        remote_updated_at?: string | null;
        remote_was_deleted?: boolean | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: RemoteData.Raw[] | null;
    }
}
