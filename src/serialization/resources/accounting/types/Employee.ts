/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { EmployeeCompany } from "./EmployeeCompany";
import { EmployeeStatus } from "./EmployeeStatus";
import { RemoteData } from "./RemoteData";

export const Employee: core.serialization.ObjectSchema<serializers.accounting.Employee.Raw, Merge.accounting.Employee> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
        firstName: core.serialization.property("first_name", core.serialization.string().optional()),
        lastName: core.serialization.property("last_name", core.serialization.string().optional()),
        isContractor: core.serialization.property("is_contractor", core.serialization.boolean().optional()),
        employeeNumber: core.serialization.property("employee_number", core.serialization.string().optional()),
        emailAddress: core.serialization.property("email_address", core.serialization.string().optional()),
        company: EmployeeCompany.optional(),
        status: EmployeeStatus,
        remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
        fieldMappings: core.serialization.property(
            "field_mappings",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
        ),
        remoteData: core.serialization.property("remote_data", core.serialization.list(RemoteData).optional()),
    });

export declare namespace Employee {
    interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        first_name?: string | null;
        last_name?: string | null;
        is_contractor?: boolean | null;
        employee_number?: string | null;
        email_address?: string | null;
        company?: EmployeeCompany.Raw | null;
        status: EmployeeStatus.Raw;
        remote_was_deleted?: boolean | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: RemoteData.Raw[] | null;
    }
}
