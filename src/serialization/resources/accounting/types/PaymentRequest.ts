/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { PaymentRequestContact } from "./PaymentRequestContact";
import { PaymentRequestAccount } from "./PaymentRequestAccount";
import { PaymentRequestCurrency } from "./PaymentRequestCurrency";
import { PaymentRequestCompany } from "./PaymentRequestCompany";
import { PaymentRequestType } from "./PaymentRequestType";
import { PaymentRequestTrackingCategoriesItem } from "./PaymentRequestTrackingCategoriesItem";
import { PaymentRequestAccountingPeriod } from "./PaymentRequestAccountingPeriod";
import { PaymentRequestAppliedToLinesItem } from "./PaymentRequestAppliedToLinesItem";
import { RemoteFieldRequest } from "./RemoteFieldRequest";

export const PaymentRequest: core.serialization.ObjectSchema<
    serializers.accounting.PaymentRequest.Raw,
    Merge.accounting.PaymentRequest
> = core.serialization.object({
    transactionDate: core.serialization.property("transaction_date", core.serialization.date().optional()),
    contact: PaymentRequestContact.optional(),
    account: PaymentRequestAccount.optional(),
    currency: PaymentRequestCurrency.optional(),
    exchangeRate: core.serialization.property("exchange_rate", core.serialization.string().optional()),
    company: PaymentRequestCompany.optional(),
    totalAmount: core.serialization.property("total_amount", core.serialization.number().optional()),
    type: PaymentRequestType.optional(),
    trackingCategories: core.serialization.property(
        "tracking_categories",
        core.serialization.list(PaymentRequestTrackingCategoriesItem.optional()).optional()
    ),
    accountingPeriod: core.serialization.property("accounting_period", PaymentRequestAccountingPeriod.optional()),
    appliedToLines: core.serialization.property(
        "applied_to_lines",
        core.serialization.list(PaymentRequestAppliedToLinesItem).optional()
    ),
    integrationParams: core.serialization.property(
        "integration_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    linkedAccountParams: core.serialization.property(
        "linked_account_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    remoteFields: core.serialization.property("remote_fields", core.serialization.list(RemoteFieldRequest).optional()),
});

export declare namespace PaymentRequest {
    interface Raw {
        transaction_date?: string | null;
        contact?: PaymentRequestContact.Raw | null;
        account?: PaymentRequestAccount.Raw | null;
        currency?: PaymentRequestCurrency.Raw | null;
        exchange_rate?: string | null;
        company?: PaymentRequestCompany.Raw | null;
        total_amount?: number | null;
        type?: PaymentRequestType.Raw | null;
        tracking_categories?: (PaymentRequestTrackingCategoriesItem.Raw | null | undefined)[] | null;
        accounting_period?: PaymentRequestAccountingPeriod.Raw | null;
        applied_to_lines?: PaymentRequestAppliedToLinesItem.Raw[] | null;
        integration_params?: Record<string, unknown> | null;
        linked_account_params?: Record<string, unknown> | null;
        remote_fields?: RemoteFieldRequest.Raw[] | null;
    }
}
