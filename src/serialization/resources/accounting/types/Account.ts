/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { AccountClassification } from "./AccountClassification";
import { AccountAccountType } from "./AccountAccountType";
import { AccountStatus } from "./AccountStatus";
import { AccountCurrency } from "./AccountCurrency";
import { RemoteData } from "./RemoteData";

export const Account: core.serialization.ObjectSchema<serializers.accounting.Account.Raw, Merge.accounting.Account> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
        modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
        name: core.serialization.string().optional(),
        description: core.serialization.string().optional(),
        classification: AccountClassification.optional(),
        type: core.serialization.string().optional(),
        accountType: core.serialization.property("account_type", AccountAccountType.optional()),
        status: AccountStatus.optional(),
        currentBalance: core.serialization.property("current_balance", core.serialization.number().optional()),
        currency: AccountCurrency.optional(),
        accountNumber: core.serialization.property("account_number", core.serialization.string().optional()),
        parentAccount: core.serialization.property("parent_account", core.serialization.string().optional()),
        company: core.serialization.string().optional(),
        remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
        fieldMappings: core.serialization.property(
            "field_mappings",
            core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
        ),
        remoteData: core.serialization.property("remote_data", core.serialization.list(RemoteData).optional()),
    });

export declare namespace Account {
    export interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        name?: string | null;
        description?: string | null;
        classification?: AccountClassification.Raw | null;
        type?: string | null;
        account_type?: AccountAccountType.Raw | null;
        status?: AccountStatus.Raw | null;
        current_balance?: number | null;
        currency?: AccountCurrency.Raw | null;
        account_number?: string | null;
        parent_account?: string | null;
        company?: string | null;
        remote_was_deleted?: boolean | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: RemoteData.Raw[] | null;
    }
}
