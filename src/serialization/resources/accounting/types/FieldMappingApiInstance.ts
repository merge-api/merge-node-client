/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { FieldMappingApiInstanceTargetField } from "./FieldMappingApiInstanceTargetField";
import { FieldMappingApiInstanceRemoteField } from "./FieldMappingApiInstanceRemoteField";

export const FieldMappingApiInstance: core.serialization.ObjectSchema<
    serializers.accounting.FieldMappingApiInstance.Raw,
    Merge.accounting.FieldMappingApiInstance
> = core.serialization.object({
    id: core.serialization.string().optional(),
    isIntegrationWide: core.serialization.property("is_integration_wide", core.serialization.boolean().optional()),
    targetField: core.serialization.property("target_field", FieldMappingApiInstanceTargetField.optional()),
    remoteField: core.serialization.property("remote_field", FieldMappingApiInstanceRemoteField.optional()),
});

export declare namespace FieldMappingApiInstance {
    export interface Raw {
        id?: string | null;
        is_integration_wide?: boolean | null;
        target_field?: FieldMappingApiInstanceTargetField.Raw | null;
        remote_field?: FieldMappingApiInstanceRemoteField.Raw | null;
    }
}
