/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { CreditNoteStatus } from "./CreditNoteStatus";
import { CreditNoteContact } from "./CreditNoteContact";
import { CreditNoteCompany } from "./CreditNoteCompany";
import { CreditNoteLineItem } from "./CreditNoteLineItem";
import { CreditNoteTrackingCategoriesItem } from "./CreditNoteTrackingCategoriesItem";
import { CreditNoteCurrency } from "./CreditNoteCurrency";
import { CreditNotePaymentsItem } from "./CreditNotePaymentsItem";
import { CreditNoteAppliedPaymentsItem } from "./CreditNoteAppliedPaymentsItem";
import { CreditNoteAccountingPeriod } from "./CreditNoteAccountingPeriod";
import { RemoteData } from "./RemoteData";

export const CreditNote: core.serialization.ObjectSchema<
    serializers.accounting.CreditNote.Raw,
    Merge.accounting.CreditNote
> = core.serialization.object({
    id: core.serialization.string().optional(),
    remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
    transactionDate: core.serialization.property("transaction_date", core.serialization.date().optional()),
    status: CreditNoteStatus.optional(),
    number: core.serialization.string().optional(),
    contact: CreditNoteContact.optional(),
    company: CreditNoteCompany.optional(),
    exchangeRate: core.serialization.property("exchange_rate", core.serialization.string().optional()),
    totalAmount: core.serialization.property("total_amount", core.serialization.number().optional()),
    remainingCredit: core.serialization.property("remaining_credit", core.serialization.number().optional()),
    inclusiveOfTax: core.serialization.property("inclusive_of_tax", core.serialization.boolean().optional()),
    lineItems: core.serialization.property("line_items", core.serialization.list(CreditNoteLineItem).optional()),
    trackingCategories: core.serialization.property(
        "tracking_categories",
        core.serialization.list(CreditNoteTrackingCategoriesItem.optional()).optional()
    ),
    currency: CreditNoteCurrency.optional(),
    remoteCreatedAt: core.serialization.property("remote_created_at", core.serialization.date().optional()),
    remoteUpdatedAt: core.serialization.property("remote_updated_at", core.serialization.date().optional()),
    payments: core.serialization.list(CreditNotePaymentsItem.optional()).optional(),
    appliedPayments: core.serialization.property(
        "applied_payments",
        core.serialization.list(CreditNoteAppliedPaymentsItem.optional()).optional()
    ),
    accountingPeriod: core.serialization.property("accounting_period", CreditNoteAccountingPeriod.optional()),
    appliedToLines: core.serialization.property(
        "applied_to_lines",
        core.serialization
            .list(core.serialization.lazyObject(() => serializers.accounting.CreditNoteApplyLineForCreditNote))
            .optional()
    ),
    remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
    fieldMappings: core.serialization.property(
        "field_mappings",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    remoteData: core.serialization.property("remote_data", core.serialization.list(RemoteData).optional()),
});

export declare namespace CreditNote {
    interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        transaction_date?: string | null;
        status?: CreditNoteStatus.Raw | null;
        number?: string | null;
        contact?: CreditNoteContact.Raw | null;
        company?: CreditNoteCompany.Raw | null;
        exchange_rate?: string | null;
        total_amount?: number | null;
        remaining_credit?: number | null;
        inclusive_of_tax?: boolean | null;
        line_items?: CreditNoteLineItem.Raw[] | null;
        tracking_categories?: (CreditNoteTrackingCategoriesItem.Raw | null | undefined)[] | null;
        currency?: CreditNoteCurrency.Raw | null;
        remote_created_at?: string | null;
        remote_updated_at?: string | null;
        payments?: (CreditNotePaymentsItem.Raw | null | undefined)[] | null;
        applied_payments?: (CreditNoteAppliedPaymentsItem.Raw | null | undefined)[] | null;
        accounting_period?: CreditNoteAccountingPeriod.Raw | null;
        applied_to_lines?: serializers.accounting.CreditNoteApplyLineForCreditNote.Raw[] | null;
        remote_was_deleted?: boolean | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: RemoteData.Raw[] | null;
    }
}
