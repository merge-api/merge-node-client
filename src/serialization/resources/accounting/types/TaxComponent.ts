/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { TaxComponentComponentType } from "./TaxComponentComponentType";

export const TaxComponent: core.serialization.ObjectSchema<
    serializers.accounting.TaxComponent.Raw,
    Merge.accounting.TaxComponent
> = core.serialization.object({
    id: core.serialization.string().optional(),
    remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
    name: core.serialization.string().optional(),
    rate: core.serialization.string().optional(),
    isCompound: core.serialization.property("is_compound", core.serialization.boolean().optional()),
    componentType: core.serialization.property("component_type", TaxComponentComponentType.optional()),
    remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
});

export declare namespace TaxComponent {
    interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        name?: string | null;
        rate?: string | null;
        is_compound?: boolean | null;
        component_type?: TaxComponentComponentType.Raw | null;
        remote_was_deleted?: boolean | null;
    }
}
