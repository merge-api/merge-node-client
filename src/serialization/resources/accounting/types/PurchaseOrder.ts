/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { PurchaseOrderStatus } from "./PurchaseOrderStatus";
import { PurchaseOrderDeliveryAddress } from "./PurchaseOrderDeliveryAddress";
import { PurchaseOrderVendor } from "./PurchaseOrderVendor";
import { PurchaseOrderCompany } from "./PurchaseOrderCompany";
import { PurchaseOrderCurrency } from "./PurchaseOrderCurrency";
import { PurchaseOrderLineItem } from "./PurchaseOrderLineItem";
import { PurchaseOrderTrackingCategoriesItem } from "./PurchaseOrderTrackingCategoriesItem";
import { PurchaseOrderAccountingPeriod } from "./PurchaseOrderAccountingPeriod";
import { RemoteData } from "./RemoteData";
import { RemoteField } from "./RemoteField";

export const PurchaseOrder: core.serialization.ObjectSchema<
    serializers.accounting.PurchaseOrder.Raw,
    Merge.accounting.PurchaseOrder
> = core.serialization.object({
    id: core.serialization.string().optional(),
    remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
    status: PurchaseOrderStatus.optional(),
    issueDate: core.serialization.property("issue_date", core.serialization.date().optional()),
    purchaseOrderNumber: core.serialization.property("purchase_order_number", core.serialization.string().optional()),
    deliveryDate: core.serialization.property("delivery_date", core.serialization.date().optional()),
    deliveryAddress: core.serialization.property("delivery_address", PurchaseOrderDeliveryAddress.optional()),
    customer: core.serialization.string().optional(),
    vendor: PurchaseOrderVendor.optional(),
    memo: core.serialization.string().optional(),
    company: PurchaseOrderCompany.optional(),
    totalAmount: core.serialization.property("total_amount", core.serialization.number().optional()),
    currency: PurchaseOrderCurrency.optional(),
    exchangeRate: core.serialization.property("exchange_rate", core.serialization.string().optional()),
    lineItems: core.serialization.property("line_items", core.serialization.list(PurchaseOrderLineItem).optional()),
    inclusiveOfTax: core.serialization.property("inclusive_of_tax", core.serialization.boolean().optional()),
    trackingCategories: core.serialization.property(
        "tracking_categories",
        core.serialization.list(PurchaseOrderTrackingCategoriesItem.optional()).optional()
    ),
    accountingPeriod: core.serialization.property("accounting_period", PurchaseOrderAccountingPeriod.optional()),
    remoteCreatedAt: core.serialization.property("remote_created_at", core.serialization.date().optional()),
    remoteUpdatedAt: core.serialization.property("remote_updated_at", core.serialization.date().optional()),
    remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
    fieldMappings: core.serialization.property(
        "field_mappings",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    remoteData: core.serialization.property("remote_data", core.serialization.list(RemoteData).optional()),
    remoteFields: core.serialization.property("remote_fields", core.serialization.list(RemoteField).optional()),
});

export declare namespace PurchaseOrder {
    interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        status?: PurchaseOrderStatus.Raw | null;
        issue_date?: string | null;
        purchase_order_number?: string | null;
        delivery_date?: string | null;
        delivery_address?: PurchaseOrderDeliveryAddress.Raw | null;
        customer?: string | null;
        vendor?: PurchaseOrderVendor.Raw | null;
        memo?: string | null;
        company?: PurchaseOrderCompany.Raw | null;
        total_amount?: number | null;
        currency?: PurchaseOrderCurrency.Raw | null;
        exchange_rate?: string | null;
        line_items?: PurchaseOrderLineItem.Raw[] | null;
        inclusive_of_tax?: boolean | null;
        tracking_categories?: (PurchaseOrderTrackingCategoriesItem.Raw | null | undefined)[] | null;
        accounting_period?: PurchaseOrderAccountingPeriod.Raw | null;
        remote_created_at?: string | null;
        remote_updated_at?: string | null;
        remote_was_deleted?: boolean | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: RemoteData.Raw[] | null;
        remote_fields?: RemoteField.Raw[] | null;
    }
}
