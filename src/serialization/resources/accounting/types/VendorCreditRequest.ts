/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { VendorCreditRequestVendor } from "./VendorCreditRequestVendor";
import { VendorCreditRequestCurrency } from "./VendorCreditRequestCurrency";
import { VendorCreditRequestCompany } from "./VendorCreditRequestCompany";
import { VendorCreditRequestTrackingCategoriesItem } from "./VendorCreditRequestTrackingCategoriesItem";
import { VendorCreditApplyLineForVendorCreditRequest } from "./VendorCreditApplyLineForVendorCreditRequest";
import { VendorCreditRequestAccountingPeriod } from "./VendorCreditRequestAccountingPeriod";

export const VendorCreditRequest: core.serialization.ObjectSchema<
    serializers.accounting.VendorCreditRequest.Raw,
    Merge.accounting.VendorCreditRequest
> = core.serialization.object({
    number: core.serialization.string().optional(),
    transactionDate: core.serialization.property("transaction_date", core.serialization.date().optional()),
    vendor: VendorCreditRequestVendor.optional(),
    totalAmount: core.serialization.property("total_amount", core.serialization.number().optional()),
    currency: VendorCreditRequestCurrency.optional(),
    exchangeRate: core.serialization.property("exchange_rate", core.serialization.string().optional()),
    inclusiveOfTax: core.serialization.property("inclusive_of_tax", core.serialization.boolean().optional()),
    company: VendorCreditRequestCompany.optional(),
    trackingCategories: core.serialization.property(
        "tracking_categories",
        core.serialization.list(VendorCreditRequestTrackingCategoriesItem.optional()).optional(),
    ),
    appliedToLines: core.serialization.property(
        "applied_to_lines",
        core.serialization.list(VendorCreditApplyLineForVendorCreditRequest).optional(),
    ),
    accountingPeriod: core.serialization.property("accounting_period", VendorCreditRequestAccountingPeriod.optional()),
    integrationParams: core.serialization.property(
        "integration_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    ),
    linkedAccountParams: core.serialization.property(
        "linked_account_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    ),
});

export declare namespace VendorCreditRequest {
    export interface Raw {
        number?: string | null;
        transaction_date?: string | null;
        vendor?: VendorCreditRequestVendor.Raw | null;
        total_amount?: number | null;
        currency?: VendorCreditRequestCurrency.Raw | null;
        exchange_rate?: string | null;
        inclusive_of_tax?: boolean | null;
        company?: VendorCreditRequestCompany.Raw | null;
        tracking_categories?: (VendorCreditRequestTrackingCategoriesItem.Raw | null | undefined)[] | null;
        applied_to_lines?: VendorCreditApplyLineForVendorCreditRequest.Raw[] | null;
        accounting_period?: VendorCreditRequestAccountingPeriod.Raw | null;
        integration_params?: Record<string, unknown> | null;
        linked_account_params?: Record<string, unknown> | null;
    }
}
