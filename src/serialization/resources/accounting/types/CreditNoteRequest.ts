/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { CreditNoteRequestStatus } from "./CreditNoteRequestStatus";
import { CreditNoteRequestContact } from "./CreditNoteRequestContact";
import { CreditNoteRequestCompany } from "./CreditNoteRequestCompany";
import { CreditNoteRequestLineItemsItem } from "./CreditNoteRequestLineItemsItem";
import { CreditNoteRequestTrackingCategoriesItem } from "./CreditNoteRequestTrackingCategoriesItem";
import { CreditNoteRequestCurrency } from "./CreditNoteRequestCurrency";
import { CreditNoteRequestPaymentsItem } from "./CreditNoteRequestPaymentsItem";
import { CreditNoteRequestAppliedPaymentsItem } from "./CreditNoteRequestAppliedPaymentsItem";
import { CreditNoteRequestAccountingPeriod } from "./CreditNoteRequestAccountingPeriod";
import { CreditNoteApplyLineForCreditNoteRequest } from "./CreditNoteApplyLineForCreditNoteRequest";

export const CreditNoteRequest: core.serialization.ObjectSchema<
    serializers.accounting.CreditNoteRequest.Raw,
    Merge.accounting.CreditNoteRequest
> = core.serialization.object({
    transactionDate: core.serialization.property("transaction_date", core.serialization.date().optional()),
    status: CreditNoteRequestStatus.optional(),
    number: core.serialization.string().optional(),
    contact: CreditNoteRequestContact.optional(),
    company: CreditNoteRequestCompany.optional(),
    exchangeRate: core.serialization.property("exchange_rate", core.serialization.string().optional()),
    totalAmount: core.serialization.property("total_amount", core.serialization.number().optional()),
    remainingCredit: core.serialization.property("remaining_credit", core.serialization.number().optional()),
    inclusiveOfTax: core.serialization.property("inclusive_of_tax", core.serialization.boolean().optional()),
    lineItems: core.serialization.property(
        "line_items",
        core.serialization.list(CreditNoteRequestLineItemsItem).optional()
    ),
    trackingCategories: core.serialization.property(
        "tracking_categories",
        core.serialization.list(CreditNoteRequestTrackingCategoriesItem.optional()).optional()
    ),
    currency: CreditNoteRequestCurrency.optional(),
    payments: core.serialization.list(CreditNoteRequestPaymentsItem.optional()).optional(),
    appliedPayments: core.serialization.property(
        "applied_payments",
        core.serialization.list(CreditNoteRequestAppliedPaymentsItem.optional()).optional()
    ),
    accountingPeriod: core.serialization.property("accounting_period", CreditNoteRequestAccountingPeriod.optional()),
    appliedToLines: core.serialization.property(
        "applied_to_lines",
        core.serialization.list(CreditNoteApplyLineForCreditNoteRequest).optional()
    ),
    integrationParams: core.serialization.property(
        "integration_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    linkedAccountParams: core.serialization.property(
        "linked_account_params",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
});

export declare namespace CreditNoteRequest {
    interface Raw {
        transaction_date?: string | null;
        status?: CreditNoteRequestStatus.Raw | null;
        number?: string | null;
        contact?: CreditNoteRequestContact.Raw | null;
        company?: CreditNoteRequestCompany.Raw | null;
        exchange_rate?: string | null;
        total_amount?: number | null;
        remaining_credit?: number | null;
        inclusive_of_tax?: boolean | null;
        line_items?: CreditNoteRequestLineItemsItem.Raw[] | null;
        tracking_categories?: (CreditNoteRequestTrackingCategoriesItem.Raw | null | undefined)[] | null;
        currency?: CreditNoteRequestCurrency.Raw | null;
        payments?: (CreditNoteRequestPaymentsItem.Raw | null | undefined)[] | null;
        applied_payments?: (CreditNoteRequestAppliedPaymentsItem.Raw | null | undefined)[] | null;
        accounting_period?: CreditNoteRequestAccountingPeriod.Raw | null;
        applied_to_lines?: CreditNoteApplyLineForCreditNoteRequest.Raw[] | null;
        integration_params?: Record<string, unknown> | null;
        linked_account_params?: Record<string, unknown> | null;
    }
}
