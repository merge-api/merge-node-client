/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { CashFlowStatementCurrency } from "./CashFlowStatementCurrency";
import { CashFlowStatementCompany } from "./CashFlowStatementCompany";
import { ReportItem } from "./ReportItem";
import { RemoteData } from "./RemoteData";

export const CashFlowStatement: core.serialization.ObjectSchema<
    serializers.accounting.CashFlowStatement.Raw,
    Merge.accounting.CashFlowStatement
> = core.serialization.object({
    id: core.serialization.string().optional(),
    remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
    name: core.serialization.string().optional(),
    currency: CashFlowStatementCurrency.optional(),
    company: CashFlowStatementCompany.optional(),
    startPeriod: core.serialization.property("start_period", core.serialization.date().optional()),
    endPeriod: core.serialization.property("end_period", core.serialization.date().optional()),
    cashAtBeginningOfPeriod: core.serialization.property(
        "cash_at_beginning_of_period",
        core.serialization.number().optional()
    ),
    cashAtEndOfPeriod: core.serialization.property("cash_at_end_of_period", core.serialization.number().optional()),
    operatingActivities: core.serialization.property(
        "operating_activities",
        core.serialization.list(ReportItem).optional()
    ),
    investingActivities: core.serialization.property(
        "investing_activities",
        core.serialization.list(ReportItem).optional()
    ),
    financingActivities: core.serialization.property(
        "financing_activities",
        core.serialization.list(ReportItem).optional()
    ),
    remoteGeneratedAt: core.serialization.property("remote_generated_at", core.serialization.date().optional()),
    remoteWasDeleted: core.serialization.property("remote_was_deleted", core.serialization.boolean().optional()),
    fieldMappings: core.serialization.property(
        "field_mappings",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional()
    ),
    remoteData: core.serialization.property("remote_data", core.serialization.list(RemoteData).optional()),
});

export declare namespace CashFlowStatement {
    interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        name?: string | null;
        currency?: CashFlowStatementCurrency.Raw | null;
        company?: CashFlowStatementCompany.Raw | null;
        start_period?: string | null;
        end_period?: string | null;
        cash_at_beginning_of_period?: number | null;
        cash_at_end_of_period?: number | null;
        operating_activities?: ReportItem.Raw[] | null;
        investing_activities?: ReportItem.Raw[] | null;
        financing_activities?: ReportItem.Raw[] | null;
        remote_generated_at?: string | null;
        remote_was_deleted?: boolean | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: RemoteData.Raw[] | null;
    }
}
