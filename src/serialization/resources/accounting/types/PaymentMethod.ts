/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { PaymentMethodMethodType } from "./PaymentMethodMethodType";
import { RemoteData } from "./RemoteData";

export const PaymentMethod: core.serialization.ObjectSchema<
    serializers.accounting.PaymentMethod.Raw,
    Merge.accounting.PaymentMethod
> = core.serialization.object({
    id: core.serialization.string().optional(),
    remoteId: core.serialization.property("remote_id", core.serialization.string().optional()),
    createdAt: core.serialization.property("created_at", core.serialization.date().optional()),
    modifiedAt: core.serialization.property("modified_at", core.serialization.date().optional()),
    methodType: core.serialization.property("method_type", PaymentMethodMethodType),
    name: core.serialization.string(),
    isActive: core.serialization.property("is_active", core.serialization.boolean().optional()),
    remoteUpdatedAt: core.serialization.property("remote_updated_at", core.serialization.date().optional()),
    fieldMappings: core.serialization.property(
        "field_mappings",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    ),
    remoteData: core.serialization.property("remote_data", core.serialization.list(RemoteData).optional()),
});

export declare namespace PaymentMethod {
    export interface Raw {
        id?: string | null;
        remote_id?: string | null;
        created_at?: string | null;
        modified_at?: string | null;
        method_type: PaymentMethodMethodType.Raw;
        name: string;
        is_active?: boolean | null;
        remote_updated_at?: string | null;
        field_mappings?: Record<string, unknown> | null;
        remote_data?: RemoteData.Raw[] | null;
    }
}
