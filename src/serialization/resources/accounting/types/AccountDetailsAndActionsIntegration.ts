/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Merge from "../../../../api/index";
import * as core from "../../../../core";
import { CategoriesEnum } from "./CategoriesEnum";
import { ModelOperation } from "./ModelOperation";

export const AccountDetailsAndActionsIntegration: core.serialization.ObjectSchema<
    serializers.accounting.AccountDetailsAndActionsIntegration.Raw,
    Merge.accounting.AccountDetailsAndActionsIntegration
> = core.serialization.object({
    name: core.serialization.string(),
    categories: core.serialization.list(CategoriesEnum),
    image: core.serialization.string().optional(),
    squareImage: core.serialization.property("square_image", core.serialization.string().optional()),
    color: core.serialization.string(),
    slug: core.serialization.string(),
    passthroughAvailable: core.serialization.property("passthrough_available", core.serialization.boolean()),
    availableModelOperations: core.serialization.property(
        "available_model_operations",
        core.serialization.list(ModelOperation).optional(),
    ),
});

export declare namespace AccountDetailsAndActionsIntegration {
    export interface Raw {
        name: string;
        categories: CategoriesEnum.Raw[];
        image?: string | null;
        square_image?: string | null;
        color: string;
        slug: string;
        passthrough_available: boolean;
        available_model_operations?: ModelOperation.Raw[] | null;
    }
}
